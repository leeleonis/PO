@model Transfer
@{
    ViewBag.ptitle = "Transfer Summary";
    var Warehouselist = EnumData.WarehouseDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var InterimList = EnumData.InterimDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var TransferStatusDDL = EnumData.TransferStatusDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var DefaultSelect = PurchaseOrderSys.App_GlobalResources.Resource.DefaultSelect;
    var ShippingList = new PurchaseOrderSys.Api.Shipping_API().ShippingList().data.shippingMethod.Select(x => new SelectListItem { Text = x.text, Value = x.value.ToString() }).ToList();
    var disabled = "disabled";
    var TStatus = Model.Status;
    var NoPrepSerials = (List<string>)ViewBag.NoPrepSerials;
}
<style>
    .error {
        background-color: red !important;
    }
</style>
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>@ViewBag.ptitle</h2>
                        <ul class="nav nav-tabs pull-right">
                            <li><a data-toggle="tab" href="#hb1">@ViewBag.ptitle</a></li>
                        </ul>
                    </header>
                    <div>
                        <div class="widget-body no-padding">
                            <form id="data-form" class="form-horizontal" method="post" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(x => x.ID)
                                @Html.Hidden("SID",Model.ID)
                                <input type="hidden" name="IsEnable" value="True">
                                <div id="content" class="tab-content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="tab-pane" id="hb1">
                                        <fieldset>
                                            <legend>Edit</legend>
                                            <div class="form-group">
                                                @Html.Label("Transfer #:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("ID", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                @Html.Label("External Transfer #:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("ExternalTra", new { htmlAttributes = new { @class = "form-control "+ TStatus, disabled } })
                                                </div>
                                                @Html.Label("Status:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.Status, TransferStatusDDL, htmlAttributes: new { @class = "form-control " + TStatus, disabled })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("From:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("FromWID", Warehouselist, htmlAttributes: new { @class = "form-control "+ TStatus, disabled })
                                                </div>
                                                @Html.Label("Interim:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("Interim", InterimList,  htmlAttributes: new { @class = "form-control "+ TStatus, disabled })
                                                </div>
                                                @Html.Label("To", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("ToWID", Warehouselist, htmlAttributes: new { @class = "form-control "+ TStatus, disabled })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Carrier:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("Carrier", ShippingList, DefaultSelect, htmlAttributes: new { @class = "form-control "+ TStatus, disabled })
                                                </div>
                                                @Html.Label("Tracking:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Tracking", new { htmlAttributes = new { @class = "form-control "+ TStatus, disabled } })
                                                </div>
                                                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend></legend>
                                            <div class="form-group">
                                                <div class="col-sm-9  col-lg-12">
                                                    @if (Model.Status == "Pending")
                                                    {
                                                        <div class="col-lg-offset-10">
                                                            <a class='btn btn-info btn-sm' href="~/File/TransferExample.xlsx">Transfer Example</a>
                                                            <a class='btn btn-danger btn-sm Excel' valID=" @Model.ID">Create by Excel</a>
                                                        </div>
                                                        <a type="button" href="@Url.Action("Requested", new { Model.ID })" class='btn btn-default btn-sm' id='Request'>Request</a>
                                                    }
                                                    else if (Model.Status == "Requested")
                                                    {
                                                        <a type = "button" href = "@Url.Action("Prep", new { Model.ID })" class='btn btn-default btn-sm' id='Prep'>Prep</a>
                                                        <a type="button" href="@Url.Action("Requested", new { Model.ID })" class='btn btn-default btn-sm' id='Request'>UnRequest</a>
                                                        <a type="button" href="@Url.Action("PrintAWB", new { Model.ID })" class='btn btn-default btn-sm' id='PrintAWB'>Print AWB</a>
                                                        if (Model.TransferSKU.Where(x => x.IsEnable).Where(x => x.SerialsLlist.Where(y => y.SerialsType == "TransferOut").Any() || x.RMASerialsLlist.Where(y => y.SerialsType == "TransferOut").Any()).Any())
                                                        {
                                                            if (NoPrepSerials.Any())
                                                            {
                                                                var Msg = "以下物品尚未安排, 請問是否繼續發送?\\n\\r";
                                                                Msg += string.Join("\\n\\r", NoPrepSerials);
                                                                <a type="button" href="@Url.Action("Ship", new { Model.ID })" class='btn btn-default btn-sm' id='Ship' onclick="return confirm('@(Msg)')">Ship</a>
                                                            }
                                                            else
                                                            {
                                                                <a type="button" href="@Url.Action("Ship", new { Model.ID })" class='btn btn-default btn-sm' id='Ship'>Ship</a>
                                                            }
                                                        }
                                                    }
                                                    else if (Model.Status == "Shipped")
                                                    {
                                                        <a type="button" href="@Url.Action("Receive", new { Model.ID })" class='btn btn-default btn-sm' id='Receive'>Receive</a>
                                                        @*<a type="button" href="@Url.Action("Received", new { Model.ID })" class='btn btn-default btn-sm' id='Received'>Received</a>*@
                                                    }
                                                    else if (Model.Status == "Received")
                                                    {
                                                        <a type="button" href="@Url.Action("Receive", new { Model.ID })" class='btn btn-default btn-sm' id='Receive'>Receive</a>
                                                        @*<a type="button" href="@Url.Action("Completed", new { Model.ID })" class='btn btn-default btn-sm' id='Completed'>Completed</a>*@
                                                    }
                                                    else if (Model.Status == "Completed")
                                                    {

                                                    }
                                                    <a class='btn btn-default btn-sm' id='DeleteSKU'>Delete</a>
                                                    @*
        <a type="button" href="@Url.Action("Unrequest",new { Model.ID})" class='btn btn-default btn-sm' id='btn-Add'>Unrequest</a>
        <a type="button" href="@Url.Action("Save",new { Model.ID})" class='btn btn-default btn-sm' id='btn-Add'>Save</a>
        <a type="button" href="@Url.Action("Delete",new { Model.ID})" class='btn btn-default btn-sm' id='btn-Add'>Delete</a>*@
                                                </div>
                                            </div>
                                            <div class="row">
                                                <article class="col-xs-12">
                                                    <table id="DataGrid" class="table table-striped table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th><input type="checkbox" /></th>
                                                                <th></th>
                                                                <th>SKU</th>
                                                                <th>Product Name</th>
                                                                <th>QTY</th>
                                                                <th>Serial</th>
                                                                <th>Label</th>
                                                                <th>Total Received</th>
                                                                @*<th>TWN (Available)</th>*@
                                                                @*<th>Winit US WC (Available)</th>*@
                                                                @*<th>Download</th>*@
                                                                @*<th>Action</th>*@
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @*@if (Model != null)
                                                                {
                                                                    foreach (var item in Model)
                                                                    {
                                                                        <tr>
                                                                            <td></td>
                                                                            <td><input type="checkbox" /></td>
                                                                            <td>@item.SKUID</td>
                                                                            <td>@item.PurchaseSKU.Name</td>
                                                                            <td>@item.QTY</td>
                                                                            <td>Serial</td>
                                                                            <td>Label</td>
                                                                            <td>@item.TotalReceive</td>
                                                                            <td>@item.TWN</td>
                                                                            <td>@item.Winit</td>
                                                                            <td>Download</td>
                                                                            <td>Action</td>
                                                                        </tr>
                                                                    }
                                                                }*@
                                                        </tbody>
                                                        @if (Model.Status == "Pending")
                                                        {
                                                            <tfoot>
                                                                <tr>
                                                                    <td colspan="8">
                                                                        <select id="gebruikerId" name="gebruikerId" class=" form-control" style="width:50%"></select>
                                                                        <button type="button" id="addsku">Add SKU</button>
                                                                    </td>
                                                                </tr>
                                                            </tfoot>
                                                        }
                                                    </table>
                                                </article>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="widget-footer">
                                    <button type="submit" class="btn btn-primary" id="save">儲存</button>
                                    <button type="button" class="btn btn-primary" id="saveexit">儲存並返回</button>
                                    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index")'">返回</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<div id="dialog">

</div>
@section pagespecific {
    <script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');
        var DataGrid;
        var tableID = "#DataGrid";
        $(document).ready(function () {
            $(".Pending").prop("disabled", false);
             DataGrid = $(tableID).DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                columns: [
                    {
                        data: "ck",
                        className: 'select-checkbox',
                        orderable: false,
                        render: function (data, type, obj, meta) {
                            return '<input type="checkbox" value="' + data + '">';
                        }
                    },
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": '' },
                    {
                        data: "SKU",
                        render: function (data, type, row) {
                            return "<a  target='_blank' href='" + "@Url.Action("edit", "Sku")" + "?id=" + row.SKU + "#6'>" + row.SKU + "</a>";
                        }
                    },
                    { data: "ProductName" },
                    @if (Model.Status== "Pending")
                    {
                        @:{ data: "QTY", render: function (data, type, row) { return '<input class="form-control" type="text" onchange="TSkuNumberListQTY(this,' + row.ck + ',' + data + ')"  value = ' + data + ' > '; } },
                    }
                    else
                    {
                        @: { data: "QTY", render: function(data, type, row) { return data; } },
                    }
                    { data: "Serial", render: function (data, type, row) { return data; } },
                    { data: "Label", render: function (data, type, row) { return thousandComma(data); }  },
                    { data: "TotalReceive", render: function (data, type, row) { return data; } },
                    //{ data: "TWN", render: function (data, type, row) { return thousandComma(data); }  },
                    //{ data: "Winit", render: function (data, type, row) { return thousandComma(data); } }
                ],
                ajax: {
                    traditional: true,
                    method: "get",//或post，自由決定，影響到Server端用FormCollection取值或Request.QueryString取得DataTables傳遞的資訊
                    url: "@Url.Action("TSkuNumberList", "Ajax")",
                    data: function (d) {
                        var Skulist = $("#gebruikerId").val();
                        var FromWID = $("#FromWID").val();
                        d.SID = @Html.Display("ID");
                        d.Skulist = Skulist;
                        d.FromWID = FromWID;
                        $("#gebruikerId").val(null).trigger('change');
                    }
                },
                serverSide: true,//啟用ServerSide模式
                //deferLoading: 0, //初始化DataTable時，不發出ajax
                orderMulti: false,
                "paging": false,
                "ordering": false,
                "info": true,
                 "searching": false,
                 "footerCallback": function (row, data, start, end, display) {
                 },
                 "rowCallback": function (row, data, index) {
                     if (data.Prep != 0) {
                         $('td', row).css('background-color', 'yellow');
                     }
                 }
            });
            $(tableID + ' tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = DataGrid.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(GetSerialList(row.data())).show();
                    tr.addClass('shown');
                }
            });
            $("#gebruikerId").select2({
                minimumInputLength: 1,
                placeholder: "Search",
                allowClear: true,
                multiple: true,
                ajax: {
                    url: "@Url.Action("TSkuNumberGet", "Ajax")",
                    dataType: 'json',
                    delay: 0,
                    data: function (term) {
                        var FromWID = $("#FromWID").val();
                        if (FromWID == "") {
                            alert("請選擇移出倉");
                            return "";
                        }
                        else {
                            var query = {
                                search: term.term,
                                FromWID: FromWID
                            }
                            return query;
                        }
                    },
                    processResults: function (data) {
                        return {
                            results: data.items,
                            pagination: {
                                more: true
                            }
                        };
                    }
                }
            });
            $("#addsku").click(function () {
                var FromWID = $("#FromWID").val();
                if (FromWID == "") {
                    alert("請選擇移出倉");
                }
                else {
                    DataGrid.draw();
                }
            });
            $("select").change(function () {
                var FromWID = $("#FromWID").val();
                var ToWID = $("#ToWID").val();
                if (FromWID == ToWID) {
                    if (FromWID != "") {
                        alert("From 和 To 不可重複");
                        $(this).val("");
                    }
                }
                if ($(this).attr("id") =="FromWID") {

                }
            });
            $("#Request").click(function () {
                var Msg = "";
                $("table").find("input[type='text']").each(function () {
                    if ($(this).val() < 1) {
                        $(this).closest("td").addClass("error");
                        Msg = "Err"
                    }
                })
                if (Msg == "") {
                    ajaxpost(this)
                }
                return false;
            });
            $("#DeleteSKU").click(function () {
                var dataList = [];
                $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                //for (var i in rows) {
                //    dataList.push(i);
                //}
                $.ajax({
                    traditional: true,
                    type: "post",
                    url: "@Url.Action("RemoveData")",
                    data: {
                        SID:@Html.Display("ID"),
                        IDList: dataList,
                    },
                    success: function (data) {
                        if (data.status) {
                            $(tableID + ' thead input[type="checkbox"]').prop("checked", false);
                            DataGrid.draw();
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("#dialog").dialog({
                autoOpen: false,
                width: 800
            });
            $("body").on("click", ".Excel", function () {
                var url = '@Url.Action("SerialsExcel", "Ajax")'
                $.ajax({
                    url: url,
                    data: { id: $(this).attr("valID"), key: "TransferExcel"},
                    success: function (data) {
                        $("#dialog").dialog({
                            title: "Excel"
                        });
                        $("#dialog").html(data);
                        $("#dialog").dialog("open");
                        //$("#dialog").load(data).dialog({ modal: true }).dialog('open');
                    }
                });
                return false;
            });
        });
        function ajaxpost(e) {
            $.ajax({
                url: $(e).attr("href"),
                success: function (data) {
                    if (data.status) {

                        window.location.reload();
                    }
                    else {
                        alert(data.Errmsg)
                    }
                }
            })
        }
        function GetSerialList(d) {
            var div = $('<div style="border:2px blue solid;" />').addClass('loading').text('Loading...');
            $.ajax({
                type: "post",
                url: "@Url.Action("GetSerialList")",
                data: {
                    ID: d.ID
                },
                success: function (data) {
                    if (data.status) {
                        div.html(data.partial).removeClass('loading');
                    }
                    else {
                        val = data.Errmsg;
                    }
                }
            });
            return div;
        }
        function TSkuNumberListQTY(x,id) {
            $.ajax({
                type: "post",
                url: "@Url.Action("TSkuNumberListQTY", "Ajax")",
                data: {
                    SID:@Html.Display("ID"),
                    ID: id,
                    val: $(x).val(),
                },
                success: function (data) {
                    if (data.status) {
                        DataGrid.draw();
                    }
                    else {
                        alert(data.Errmsg);
                    }
                }
            });
        }
        function Success(data) {
            $("#dialog").dialog("close");
            if (data.status == false) {
                alert(data.Msg);
            }
            if (data.reload == true) {
                window.location.reload();
            }
        }
    </script>
}



