@model TransferSearchVM
@{
    ViewBag.ptitle = "Winit倉庫轉移";
    var Warehouselist = EnumData.WarehouseDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var InterimList = EnumData.InterimDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var TransferStatusDDL = EnumData.TransferStatusDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var DefaultSelect = PurchaseOrderSys.App_GlobalResources.Resource.DefaultSelect;
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>@ViewBag.ptitle</h2>
                        <ul class="nav nav-tabs pull-right">
                            <li><a data-toggle="tab" href="#hb1">@ViewBag.ptitle</a></li>
                        </ul>
                    </header>

                    <div>
                        <div class="widget-body no-padding">
                            <div id="content" class="tab-content">
                                <div class="tab-pane" id="hb1">
                                    <fieldset>
                                        <legend>Search</legend>
                                        <form id="data-form" class="form-horizontal" method="post" enctype="multipart/form-data">
                                            <div class="form-group">
                                                @Html.Label("Status", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.Status, TransferStatusDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                                @Html.Label("SKU", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("SKU", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Serial", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Serial", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("From", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.From, Warehouselist, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                                @Html.Label("Interim", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.Interim, InterimList, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                                @Html.Label("To", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.To, Warehouselist, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Transfer", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Transfer", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("External Transfer", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("External Transfer", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Carrier", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Carrier", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Tracking", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Tracking", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-lg-offset-10">
                                                <button type="submit" id="btn-search" class="btn btn-info btn-lg">Search</button>
                                            </div>
                                        </form>
                                    </fieldset>
                                    <fieldset>
                                        <legend></legend>
                                        <div class="form-group">
                                            <div class="col-sm-9  col-lg-offset-11">
                                                <a type="button" href="@Url.Action("Create")" class='btn btn-danger btn-sm' id='btn-Add'>Create</a>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <article class="col-xs-12">
                                                <table id="DataGrid" class="table table-striped table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th><input type="checkbox" /></th>
                                                            <th>Transfer</th>
                                                            <th>External Transfer</th>
                                                            <th>Title</th>
                                                            <th>From</th>
                                                            <th>To</th>
                                                            <th>Total QTY</th>
                                                            <th>Total Received</th>
                                                            <th>Created Date</th>
                                                            <th>Created By</th>
                                                            <th>Status</th>
                                                            <th>Download</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.Transferlist != null)
                                                        {
                                                            foreach (var item in Model.Transferlist.OrderByDescending(x => x.ID))
                                                            {
                                                                <tr>
                                                                    <td><input type="checkbox" /></td>
                                                                    <td>
                                                                        <a href='@Url.Action("Edit", new { item.ID })'>@item.ID</a>
                                                                    </td>
                                                                    <td>@item.ExternalTra</td>
                                                                    <td>@item.Title</td>
                                                                    <td>@(item.WarehouseFrom?.Name)</td>
                                                                    <td>@(item.WarehouseTo?.Name)</td>
                                                                    <td>@item.TransferSKU.Where(x => x.IsEnable).Sum(x => x.QTY)</td>
                                                                    <td>
                                                                        @(item.TransferSKU.Where(x => x.IsEnable).Sum(x => x.SerialsLlist.Where(y => y.SerialsType == "TransferIn").Sum(y => y.SerialsQTY)))
                                                                    </td>
                                                                    <td>@item.CreateAt.ToLocalTime()</td>
                                                                    <td>@item.CreateBy</td>
                                                                    <td>@item.Status</td>
                                                                    <td></td>
                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </article>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');

        //$('.datepicker').datepicker({
        //    dateFormat: 'yy-mm-dd'
        //});
        $(document).ready(function () {
            $('#DataGrid').DataTable();
        });
    </script>
}



