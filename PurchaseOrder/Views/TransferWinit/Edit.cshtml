@model Transfer
@{
    ViewBag.ptitle = "Winit倉庫轉移";
    var FromWarehouseDDL = EnumData.NotWinitWarehouseDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var ToWarehouseDDL = EnumData.WinitWarehouseDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var InterimList = EnumData.InterimDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var TransferStatusDDL = EnumData.TransferStatusDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var DefaultSelect = PurchaseOrderSys.App_GlobalResources.Resource.DefaultSelect;
    var ShippingList = new PurchaseOrderSys.FedExApi.Shipping_API().ShippingList().data.shippingMethod.Select(x => new SelectListItem { Text = x.text, Value = x.value.ToString() }).OrderBy(x => x.Text).ToList();
    var disabled = "disabled";
    var TStatus = Model.Status;
    var NoPrepSerials = (List<string>)ViewBag.NoPrepSerials;
    var BoxLabelSize = EnumData.BoxLabelSize().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var SBarcodeLabelType = EnumData.SBarcodeLabelType().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    ViewBag.BoxLabelSize = Model.WinitTransfer.BoxLabelSize;
    ViewBag.SBarcodeLabelType = Model.WinitTransfer.SBarcodeLabelType;
    ShippingList.Where(q => q.Value == "35").First().Selected = true;
    var i = 0;
}
<style>
    .error {
        background-color: red !important;
    }
    td.noSerial {
        background-color: yellow !important;
    }
    .dataTable thead .details-control:before {
        font-family: FontAwesome;
        content: "";
        font-size: 1.4em;
        color: #739e73;
    }
    .dataTable thead .shown .details-control:before {
        content: "";
        color: #a90329;
    }
</style>
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>@ViewBag.ptitle</h2>
                        <ul class="nav nav-tabs pull-right">
                            <li>
                                <a data-toggle="tab" href="#hb1">@ViewBag.ptitle</a>
                            </li>
                        </ul>
                    </header>
                    <div>
                        <div class="widget-body no-padding">
                            <form id="data-form" class="form-horizontal" method="post" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(x => x.ID)
                                @Html.Hidden("SID", Model.ID)
                                <input type="hidden" name="IsEnable" value="True">
                                <div id="content" class="tab-content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="tab-pane" id="hb1">
                                        <h1><b>Transfer# @Model.ID　　</b><a href="https://seller.winit.com.cn/WHInbound/orderDetailDelivery/orderNo/@Model.WinitTransfer.WinitOrderNo" target="_blank"><b>External Transfer # @Model.WinitTransfer.WinitOrderNo</b></a> </h1>
                                        <fieldset>
                                            <legend></legend>
                                            <div class="form-group">
                                                @*@Html.Label("Transfer #:", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-9 col-lg-2">
                @Html.Editor("ID", new { htmlAttributes = new { @class = "form-control " + TStatus, disabled } })
            </div>
            @Html.Label("External Transfer #:", htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-9 col-lg-2">
                <a href='https://seller.winit.com.cn/WHInbound/orderDetailDelivery/orderNo/@Model.WinitTransfer.WinitOrderNo' target="_blank" class="form-control">@Model.WinitTransfer.WinitOrderNo</a>
            </div>*@
                                                @Html.Label("Status:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.Status, TransferStatusDDL, htmlAttributes: new { @class = "form-control " + TStatus, disabled })
                                                </div>
                                                @Html.Label("From:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("FromWID", FromWarehouseDDL, htmlAttributes: new { @class = "form-control " + TStatus, disabled })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Carrier:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("Carrier", ShippingList, DefaultSelect, htmlAttributes: new { @class = "form-control " + TStatus, disabled })
                                                </div>
                                                @Html.Label("To", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("ToWID", ToWarehouseDDL, htmlAttributes: new { @class = "form-control " + TStatus, disabled })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Tracking:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @if (string.IsNullOrWhiteSpace(Model.Tracking))
                                                    {
                                                        @Html.Editor("Tracking", new { htmlAttributes = new { @class = "form-control " + TStatus, disabled } })
                                                    }
                                                    else
                                                    {
                                                        <a href='https://www.fedex.com/apps/fedextrack/?action=track&trackingnumber=@Model.Tracking' target="_blank" class="form-control">@Model.Tracking</a>
                                                    }

                                                </div>
                                                @Html.Label("Box Label Size:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("BoxLabelSize", BoxLabelSize, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="form-group">

                                                @Html.Label(" Total Weight (Planned / Shipped): ", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    <label class="control-label col-sm-6">
                                                        @(((Model.TransferSKU.Where(x => x.IsEnable).Sum(x => (x.SKU?.Logistic?.ShippingWeight ?? 0) * (x.QTY??0))) / 1000m).ToString("N2")) / 
                                                        @(((Model.WinitTransfer.WinitTransferBox.Sum(x => (x.Weight ?? 0)) ) / 1000m).ToString("N2")) KG
                                                    </label>
                                                </div>
                                                @Html.Label("S Barcode Label Type:", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("SBarcodeLabelType", SBarcodeLabelType, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-6">
                                                    @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend></legend>
                                            <div class="form-group">
                                                <div class="col-sm-9  col-lg-6">
                                                    @if (Model.Status == "Pending")
                                                    {
                                                        @*<div class="col-lg-offset-10">
                <a class='btn btn-info btn-sm' href="~/File/TransferExample.xlsx">Transfer Example</a>
                <a class='btn btn-danger btn-sm Excel' valID=" @Model.ID">Create by Excel</a>
            </div>*@
                                                        <button type="button" class='btn btn-default btn-sm' id='Request'>Request</button>
                                                    }
                                                    else if (Model.Status == "Requested")
                                                    {
                                                        <a type="button" href="@Url.Action("Prep", new { Model.ID })" class='btn btn-default btn-sm' id='Prep'>Prep</a>
                                                        <a type="button" class='btn btn-default btn-sm' id='UnRequest'>UnRequest</a>
                                                        if (Model.TransferSKU.Where(x => x.IsEnable).Where(x => x.SerialsLlist.Where(y => y.SerialsType == "TransferOut").Any() || x.RMASerialsLlist.Where(y => y.SerialsType == "TransferOut").Any()).Any())
                                                        {
                                                            if (NoPrepSerials.Any())
                                                            {
                                                                var Msg = "以下物品尚未安排, 請問是否繼續發送?\\n\\r";
                                                                Msg += string.Join("\\n\\r", NoPrepSerials);
                                                                <a type="button" href="@Url.Action("Ship", new { Model.ID })" class='btn btn-default btn-sm' id='Ship' onclick="return confirm('@(Msg)')">Ship</a>
                                                            }
                                                            else
                                                            {
                                                                <a type="button" href="@Url.Action("Ship", new { Model.ID })" class='btn btn-default btn-sm' id='Ship'>Ship</a>
                                                            }
                                                        }
                                                    }
                                                    else if (Model.Status == "Shipped")
                                                    {
                                                        <a type="button" href="@Url.Action("Receive", new { Model.ID })" class='btn btn-default btn-sm' id='Receive'>Receive</a>
                                                        @*<a type="button" href="@Url.Action("Received", new { Model.ID })" class='btn btn-default btn-sm' id='Received'>Received</a>*@
                                                    }
                                                    else if (Model.Status == "Received")
                                                    {
                                                        <a type="button" href="@Url.Action("Receive", new { Model.ID })" class='btn btn-default btn-sm' id='Receive'>Receive</a>
                                                        @*<a type="button" href="@Url.Action("Completed", new { Model.ID })" class='btn btn-default btn-sm' id='Completed'>Completed</a>*@
                                                    }
                                                    else if (Model.Status == "Completed")
                                                    {

                                                    }
                                                    @if (Model.Status != "Completed")
                                                    {
                                                        <a class='btn btn-default btn-sm' id='DeleteSKU'>Delete</a>
                                                    }

                                                    @*
        <a type="button" href="@Url.Action("Unrequest",new { Model.ID})" class='btn btn-default btn-sm' id='btn-Add'>Unrequest</a>
        <a type="button" href="@Url.Action("Save",new { Model.ID})" class='btn btn-default btn-sm' id='btn-Add'>Save</a>
        <a type="button" href="@Url.Action("Delete",new { Model.ID})" class='btn btn-default btn-sm' id='btn-Add'>Delete</a>*@
                                                </div>
                                                <div class="col-sm-9  col-lg-6">
                                                    <div class="col-sm-12  col-lg-offset-2">

                                                        @if (Model.Status == "Pending")
                                                        {
                                                            <div class="col-sm-9  col-lg-offset-8">
                                                                <a class='btn btn-info btn-sm' href="~/File/TransferWinitExample.xlsx">Download Template</a>
                                                                <a class='btn btn-danger btn-sm Excel' valID=" @Model.ID">Upload Template</a>
                                                            </div>
                                                            @*<button type="button" class='btn btn-default btn-sm' id='Request'>Request</button>*@
                                                        }
                                                        else if (Model.Status == "Requested")
                                                        {
                                                            if (Model.TransferSKU.Where(x => x.IsEnable).Where(x => x.SerialsLlist.Where(y => y.SerialsType == "TransferOut").Any() || x.RMASerialsLlist.Where(y => y.SerialsType == "TransferOut").Any()).Any())
                                                            {
                                                                if (NoPrepSerials.Any())
                                                                {
                                                                    var Msg = "以下物品尚未安排, 請問是否繼續?\\n\\r"; Msg += string.Join("\\n\\r", NoPrepSerials);<button type="button" class="btn btn-default" id="printBox" onclick="return confirm('@(Msg)')">打印Box</button>
                                                                    <button type="button" class="btn btn-default" id="printAWB" onclick="return confirm('@(Msg)')">打印AWB</button>
                                                                }
                                                                else
                                                                {
                                                                    <button type="button" class="btn btn-default" id="printBox">打印Box</button>
                                                                    <button type="button" class="btn btn-default" id="printAWB">打印AWB</button>
                                                                }
                                                            }
                                                        }
                                                        else if (Model.Status == "Shipped")
                                                        {
                                                            <button type="button" class="btn btn-default" id="printBox">打印Box</button>
                                                            <button type="button" class="btn btn-default" id="printAWB">打印AWB</button>
                                                            <button type="button" class="btn btn-default" id="printInvoice">打印發票</button>
                                                        }
                                                        @if (string.IsNullOrWhiteSpace(Model.WinitTransfer.PrintPackageLabe))
                                                        {
                                                            <a class="btn btn-default" id="DownloadBox" target="_blank" disabled href="@Url.Action("DownloadBox", new { Model.ID })">下載Box</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="btn btn-default" id="DownloadBox" target="_blank" href="@Url.Action("DownloadBox", new { Model.ID })">下載Box</a>
                                                        }
                                                        @if (Model.WinitTransfer.WinitTransferBox.Where(x => string.IsNullOrWhiteSpace(x.FedExPdf)).Any())
                                                        {
                                                            <a class="btn btn-default" id="DownloadAWB" target="_blank" disabled href="@Url.Action("DownloadAWB",new {Model.ID })">下載AWB</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="btn btn-default" id="DownloadAWB" target="_blank" href="@Url.Action("DownloadAWB",new {Model.ID })">下載AWB</a>
                                                        }
                                                        @if (Model.WinitTransfer.WinitTransferBox.Where(x => x.WinitTransferBoxItem.Any()).Any())
                                                        {
                                                            <a class="btn btn-default" target="_blank" href="@Url.Action("DownloadSCode",new {TransferID=Model.WinitTransfer.TransferID})">下載SCode</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="btn btn-default" target="_blank" disabled href="@Url.Action("DownloadSCode",new {TransferID=Model.WinitTransfer.TransferID})">下載SCode</a>
                                                        }
                                                        @if (string.IsNullOrWhiteSpace(Model.WinitTransfer.InvoiceExcel))
                                                        {
                                                            <a class="btn btn-default" id="DownloadInvoice" target="_blank" disabled href="@Url.Action("DownloadInvoice", new { Model.ID })">下載Invoice</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="btn btn-default" id="DownloadInvoice" target="_blank" href="@Url.Action("DownloadInvoice", new { Model.ID })">下載Invoice</a>
                                                        }
                                                        @if (Model.Status == "Shipped" || Model.Status == "Received" || Model.Status == "Completed")
                                                        {
                                                            <a class="btn btn-default" id="ExcelOut" target="_blank" href="@Url.Action("DownloadExcelOut", new { Model.ID })">Excel匯出</a>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            @if (Model.Status == "Shipped" || Model.Status == "Received" || Model.Status == "Completed")
                                            {
                                                foreach (var BoxItem in Model.WinitTransfer.WinitTransferBox)
                                                {
                                                    <legend> </legend> 
                                                    <div class="row">
                                                    <h1><b> Box @(i + 1)</b></h1> 
                                                        <div class="form-group">
                                                            <div class="col-sm-4 col-lg-2">
                                                                <label class="control-label col-sm-12">Carrier: @(ShippingList.Where(x => x.Value == Model.Carrier).FirstOrDefault()?.Text)</label>
                                                            </div>
                                                            <div class="col-sm-6 col-lg-2">
                                                                <label class="control-label col-sm-12">Tracking: <a href='https://www.fedex.com/apps/fedextrack/?action=track&trackingnumber=@BoxItem.Tracking' target="_blank">@(BoxItem.Tracking)</a></label>
                                                                
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            <div class="col-sm-4 col-lg-2">
                                                                <label class="control-label col-sm-12">Length: @((BoxItem.Length ?? 0).ToString("N2")) CM</label>
                                                            </div>
                                                            <div class="col-sm-4 col-lg-2">
                                                                <label class="control-label col-sm-12">Width: @((BoxItem.Width ?? 0).ToString("N2")) CM</label>
                                                            </div>
                                                            <div class="col-sm-4 col-lg-2">
                                                                <label class="control-label col-sm-12">Height: @((BoxItem.Heigth ?? 0).ToString("N2")) CM</label>
                                                            </div>
                                                            <div class="col-sm-4 col-lg-2">
                                                                <label class="control-label col-sm-12">Weight: @(((BoxItem.Weight / 1000) ?? 0).ToString("N2")) KG</label>
                                                            </div>
                                                            <div class="col-sm-4 col-lg-2">
                                                                <label class="control-label col-sm-12">Sent / Received QTY: @(BoxItem.WinitTransferBoxItem.Count()) / @(BoxItem.WinitTransferBoxItem.Count(x=>x.SerialsLlist.SerialsLlistC.Where(y => y.IsEnable && y.SerialsType == "TransferIn").Any())) </label>
                                                            </div>
                                                        </div>
                                                        <article class="col-xs-12">
                                                            <table class="table table-striped table-bordered BoxDataGrid">
                                                                <thead>
                                                                    <tr>
                                                                        <th class="details-control"></th>
                                                                        <th>Winit M碼</th>
                                                                        <th>SKU</th>
                                                                        <th>Name</th>
                                                                        <th>Sent QTY</th>
                                                                        <th>Received QTY</th>
                                                                        <th>Price</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var item in BoxItem.WinitTransferBoxItem.GroupBy(x => x.SkuNo))
                                                                    {

                                                                        var noSerial = "noSerial";
                                                                        if (item.FirstOrDefault().SerialsLlist.SerialsLlistC.Where(x => x.IsEnable && x.SerialsType == "TransferIn").Any())
                                                                        {
                                                                            noSerial = "";
                                                                        }
                                                                    <tr>
                                                                        <td class="details-control @noSerial" boxid="@BoxItem.ID" skuno="@item.Key"></td>
                                                                        <td class="@noSerial">@(item.FirstOrDefault().WinitTransferBox.WinitTransfer.WinitTransferSKU.Where(x => x.IsEnable && x.SkuNo.Contains(item.FirstOrDefault().SkuNo)).FirstOrDefault()?.winitProductCode)</td>
                                                                        <td class="@noSerial">
                                                                            <a target='_blank' href='@Url.Action("edit", "Sku",new { id=item.FirstOrDefault().SkuNo})#6'>@item.FirstOrDefault().SkuNo</a>

                                                                        </td>
                                                                        <td class="@noSerial">
                                                                            @Html.Raw(item.FirstOrDefault().Name)
                                                                            <br />
                                                                            @Html.GetNameSize(item.FirstOrDefault().SerialsLlist.TransferSKU.SKU);
                                                                        </td>
                                                                        <td class="@noSerial">@item.Count()</td>
                                                                        <td class="@noSerial">@item.Where(x => x.SerialsLlist.SerialsLlistC.Where(y => y.IsEnable && y.SerialsType == "TransferIn").Any()).Count()</td>
                                                                        <td class="@noSerial">@item.FirstOrDefault().SerialsLlist.TransferSKU.SKU.Logistic.Price</td>
                                                                    </tr>
                                                                    }

                                                                </tbody>
                                                            </table>
                                                        </article>
                                                    </div>
                                                        i++;
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="row">
                                                        <article class="col-xs-12">
                                                            <table id="DataGrid" class="table table-striped table-bordered">
                                                                <thead>
                                                                    <tr>
                                                                        <th>
                                                                            <input type="checkbox" />
                                                                        </th>
                                                                        <th></th>
                                                                        <th>Winit M碼</th>
                                                                        <th>SKU Registration</th>
                                                                        <th>SKU</th>
                                                                        <th>Product Name</th>
                                                                        <th>Planned QTY</th>
                                                                        <th>Sent QTY</th>
                                                                        @*<th>Label</th>*@
                                                                        <th>Received QTY</th>
                                                                        <th>Price</th>
                                                                        @*<th>TWN (Available)</th>*@
                                                                        @*<th>Winit US WC (Available)</th>*@
                                                                    </tr>
                                                                </thead>
                                                                <tbody></tbody>
                                                                @if (Model.Status == "Pending")
                                                                {
                                                                    <tfoot>
                                                                        <tr>
                                                                            <td colspan="9">
                                                                                <select id="gebruikerId" name="gebruikerId" class=" form-control" style="width:50%"></select>
                                                                                <button type="button" id="addsku">Add SKU</button>
                                                                            </td>
                                                                        </tr>
                                                                    </tfoot>
                                                                }
                                                            </table>
                                                        </article>
                                                    </div>
                                                }

</fieldset>
                                    </div>
                                </div>
                                <div class="widget-footer">
                                    <button type="submit" class="btn btn-primary" id="save">儲存</button>
                                    <button type="button" class="btn btn-primary" id="saveexit">儲存並返回</button>
                                    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index")'">返回</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<div id="dialog">

</div>
@section pagespecific {
<script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');
    var DataGrid;
    var BoxDataGrid;
        var tableID = "#DataGrid";
    $(document).ready(function () {
        $(".Pending").prop("disabled", false);
        BoxDataGrid = $(".BoxDataGrid").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            "paging": false,
            "ordering": false,
            "info": false,
            "searching": false,
        });
        DataGrid = $(tableID).DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            columns: [
                {
                    data: "ck",
                    className: 'select-checkbox',
                    orderable: false,
                    render: function (data, type, obj, meta) {
                        return '<input type="checkbox" value="' + data + '">';
                    }
                },
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": ''
                },
                {
                    data: "Mcode"
                },
                {
                    data: "SKUR"
                },
                {
                    data: "SKU",
                    render: function (data, type, row) {
                        return "<a  target='_blank' href='" + "@Url.Action("edit", "Sku")" + "?id=" + row.SKU + "#6'>" + row.SKU + "</a>";
                    }
                },
                {
                    data: "ProductName",
                    render: function (data, type, row) {
                        return data + "<br>" + row.ProductMsg;
                    }
                },
                    @if (Model.Status== "Pending")
                    {
                        @:{ data: "QTY", render: function (data, type, row) { return '<input class="form-control" type="text" onchange="TSkuNumberListQTY(this,' + row.ck + ',' + data + ')"  value = ' + data + ' > '; } },
                    }
                    else
                    {
                        @: { data: "QTY", render: function (data, type, row) { return data; } },
                    }
                { data: "Serial", render: function (data, type, row) { return data; } },
                //{ data: "Label", render: function (data, type, row) { return thousandComma(data); } },
                { data: "TotalReceive", render: function (data, type, row) { return data; } },
                { data: "Price", render: function (data, type, row) { return '<input class="form-control" type="text" onchange="TSkuNumberListPrice(this,' + row.ck + ',' + data + ')"  value = ' + data + ' > '; } },
                //{ data: "TWN", render: function (data, type, row) { return thousandComma(data); }  },
                //{ data: "Winit", render: function (data, type, row) { return thousandComma(data); } }
            ],
            ajax: {
                traditional: true,
                method: "get",//或post，自由決定，影響到Server端用FormCollection取值或Request.QueryString取得DataTables傳遞的資訊
                url: "@Url.Action("TSkuNumberList", "Ajax")",
                data: function (d) {
                    var Skulist = $("#gebruikerId").val();
                    var FromWID = $("#FromWID").val();
                    var ToWID = $("#ToWID").val();
                    d.SID = @Html.Display("ID");
                    d.Skulist = Skulist;
                    d.FromWID = FromWID;
                    d.ToWID = ToWID;
                    $("#gebruikerId").val(null).trigger('change');
                },
                "dataSrc": function (json) {
                    if (json.ErrMsg != "") {
                        alert(json.ErrMsg);
                    }
                    return json.data;
                }
            },
            serverSide: true,//啟用ServerSide模式
            //deferLoading: 0, //初始化DataTable時，不發出ajax
            orderMulti: false,
            "paging": false,
            "ordering": false,
            "info": true,
            "searching": false,
            "footerCallback": function (row, data, start, end, display) {
            },
            "rowCallback": function (row, data, index) {
                if (data.Prep != 0) {
                    $('td', row).addClass('noSerial');
                }
            },
        });
        $(tableID + ' tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = DataGrid.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(GetSerialList(row.data())).show();
                tr.addClass('shown');
            }
        });
        $('.BoxDataGrid tbody').on('click', 'td.details-control', function () {
            //var BoxDataGrid = $(table).DataTable({});
            var tr = $(this).closest('tr');
            var row = BoxDataGrid.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                var boxid = $(this).attr("boxid");
                var skuno = $(this).attr("skuno");
                row.child(GetBoxSerialList(boxid, skuno)).show();
                tr.addClass('shown');
            }
        });
        $('.BoxDataGrid thead').on('click', 'th.details-control', function () {  
            var mtr = $(this).closest('tr');
            if ($(mtr).hasClass('shown')) {
                $(mtr).removeClass('shown')
            }
            else {
                $(mtr).addClass('shown')
            }
            var table = $(this).closest('table');
            //var BoxDataGrid = $(table).DataTable({});
            $(table).find("tbody tr").each(function () {
                var td = $(this).find('.details-control');
                var tr = $(this);
                var row = BoxDataGrid.row(tr);
                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    var boxid = $(td).attr("boxid");
                    var skuno = $(td).attr("skuno");
                    if (boxid != undefined) {

                        row.child(GetBoxSerialList(boxid, skuno)).show();
                        tr.addClass('shown');
                    }
                }
            });
        });
        $("#gebruikerId").select2({
            minimumInputLength: 1,
            placeholder: "Search",
            allowClear: true,
            multiple: true,
            ajax: {
                url: "@Url.Action("TSkuNumberGet", "Ajax")",
                dataType: 'json',
                delay: 0,
                data: function (term) {
                    var FromWID = $("#FromWID").val();
                    var ToWID = $("#ToWID").val();
                    if (FromWID == "") {
                        alert("請選擇移出倉");
                        return "";
                    }
                    else if (ToWID == "") {
                        alert("請選擇Winit倉");
                        return "";
                    }
                    else {
                        var query = {
                            search: term.term,
                            FromWID: FromWID,
                        }
                        return query;
                    }
                },
                processResults: function (data) {
                    return {
                        results: data.items,
                        pagination: {
                            more: true
                        }
                    };
                }
            }
        });
        $("#addsku").click(function () {
            var FromWID = $("#FromWID").val();
            if (FromWID == "") {
                alert("請選擇移出倉");
            }
            else {
                DataGrid.draw();
            }
        });
        $("select").change(function () {
            var FromWID = $("#FromWID").val();
            var ToWID = $("#ToWID").val();
            if (FromWID == ToWID) {
                if (FromWID != "") {
                    alert("From 和 To 不可重複");
                    $(this).val("");
                }
            }
            if ($(this).attr("id") == "FromWID") {

            }
        });
            @*$("#Ship").click(function () {
                $.ajax({
                    traditional: true,
                    type: "post",
                    url: "@Url.Action("Ship")",
                    data: {
                        ID:@Html.Display("ID"),
                    },
                    success: function (data) {
                        if (data.status) {
                            window.location.reload();
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                })
                return false;
            });*@
        $("#DeleteSKU").click(function () {
            var dataList = [];
            $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                dataList.push($(this).val());
            }));
            //for (var i in rows) {
            //    dataList.push(i);
            //}
            $.ajax({
                traditional: true,
                type: "post",
                url: "@Url.Action("RemoveData")",
                data: {
                    SID:@Html.Display("ID"),
                    IDList: dataList,
                },
                success: function (data) {
                    if (data.status) {
                        $(tableID + ' thead input[type="checkbox"]').prop("checked", false);
                        DataGrid.draw();
                    }
                    else {
                        alert(data.Errmsg);
                    }
                }
            });
        });
        $("#dialog").dialog({
            autoOpen: false,
            width: 800
        });
        $("body").on("click", "#UnRequest", function () {
            var url = "@Url.Action("Requested")";
            $.ajax({
                url: url,
                data: {
                    id: @Html.Display("ID"),
                },
                success: function (data) {
                    if (data.status) {
                        window.location.reload();
                    }
                    else {
                        alert(data.Errmsg)
                    }
                }
            });
            return false;
        });
        $("body").on("click", ".Excel", function () {
            var url = '@Url.Action("SerialsExcel", "Ajax")'
            $.ajax({
                url: url,
                data: { id: $(this).attr("valID"), key: "TransferWinitExcel" },
                success: function (data) {
                    $("#dialog").dialog({
                        title: "Excel"
                    });
                    $("#dialog").html(data);
                    $("#dialog").dialog("open");
                    //$("#dialog").load(data).dialog({ modal: true }).dialog('open');
                }
            });
            return false;
        });
        $("body").on("click", "#Request", function () {
            $("form").prepend('<input type="hidden" name="Requestedval" value="true" />');
            $(this).prop("disabled", "disabled");
            $("form").submit();
        });
        $("#printBox").click(function () {
            $.ajax({
                traditional: true,
                type: "post",
                url: "@Url.Action("PrintBox")",
                data: {
                    ID: "@Html.Display("ID")"
                },
                success: function (data) {
                    if (data.status) {
                        javascript: jsWebClientPrint.print(encodeURIComponent(data.print));
                    }
                    else {
                        alert(data.Errmsg);
                    }
                }
            });
        });
        $("#printAWB").click(function () {
            $.ajax({
                traditional: true,
                type: "post",
                url: "@Url.Action("PrintAWB")",
                data: {
                    ID: "@Html.Display("ID")"
                },
                success: function (data) {
                    if (data.status) {
                        javascript: jsWebClientPrint.print(encodeURIComponent(data.print));
                        javascript: jsWebClientPrint.print("key=Invoice&id=@Html.Display("ID")");
                    }
                    else {
                        alert(data.Errmsg);
                    }
                }
            });
        });
        $("#printInvoice").click(function () {
            javascript: jsWebClientPrint.print("key=Invoice&id=@Html.Display("ID")");
        });
    });
        function ajaxpost(e) {
            $.ajax({
                url: $(e).attr("href"),
                success: function (data) {
                    if (data.status) {

                        window.location.reload();
                    }
                    else {
                        alert(data.Errmsg)
                    }
                }
            })
        }
    function GetSerialList(d) {
        var div = $('<div style="border:2px blue solid;" />').addClass('loading').text('Loading...');
        $.ajax({
            type: "post",
            url: "@Url.Action("GetSerialList", "Transfer")",
            data: {
                ID: d.ID
            },
            success: function (data) {
                if (data.status) {
                    div.html(data.partial).removeClass('loading');
                }
                else {
                    val = data.Errmsg;
                }
            }
        });
        return div;
    }
    function GetBoxSerialList(boxid, skuno) {
        var div = $('<div style="border:2px blue solid;" />').addClass('loading').text('Loading...');
        $.ajax({
            type: "post",
            url: "@Url.Action("GetBoxSerialList", "TransferWinit")",
            data: {
                boxid: boxid,
                skuno: skuno
            },
            success: function (data) {
                if (data.status) {
                    div.html(data.partial).removeClass('loading');
                }
                else {
                    val = data.Errmsg;
                }
            }
        });
        return div;
    }
    function TSkuNumberListQTY(x, id) {
        $.ajax({
            type: "post",
            url: "@Url.Action("TSkuNumberListQTY", "Ajax")",
            data: {
                SID:@Html.Display("ID"),
                ID: id,
                val: $(x).val(),
            },
            success: function (data) {
                if (data.status) {
                    DataGrid.draw();
                }
                else {
                    alert(data.Errmsg);
                }
            }
        });
    }
    function TSkuNumberListPrice(x, id) {
        $.ajax({
            type: "post",
            url: "@Url.Action("TSkuNumberListPrice", "Ajax")",
            data: {
                SID:@Html.Display("ID"),
                ID: id,
                val: $(x).val(),
            },
            success: function (data) {
                if (data.status) {
                    DataGrid.draw();
                }
                else {
                    alert(data.Errmsg);
                }
            }
        });
    }
    function Success(data) {
        $("#dialog").dialog("close");
        if (data.status == false) {
            alert(data.Msg);
        }
        if (data.reload == true) {
            window.location.reload();
        }
    }
</script>   
    @Html.Raw(ViewBag.WCPScript);
}



