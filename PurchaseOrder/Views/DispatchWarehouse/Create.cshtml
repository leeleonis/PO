@model Warehouse
@{
    var SCIDList = (PurchaseOrderSys.SCService.Warehouse[])ViewBag.SCList;
    var SCList = SCIDList.Select(x => new SelectListItem { Text = x.Name, Value = x.ID.ToString() }).ToList();
    ViewBag.title = "Add Warehouse";
    var warehouseTypeDDL = EnumData.warehouseTypeDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var DefaultSelect = PurchaseOrderSys.App_GlobalResources.Resource.DefaultSelect;
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>@ViewBag.title</h2>
                        <ul class="nav nav-tabs pull-right">
                            <li><a data-toggle="tab" href="#hb1">@ViewBag.title</a></li>
                        </ul>
                    </header>
                    <div>
                        <div class="widget-body no-padding">
                            <form id="data-form" class="form-horizontal" method="post" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="IsEnable" value="True">
                                <div id="content" class="tab-content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="tab-pane" id="hb1">
                                        <fieldset>
                                            <legend>Basic Info</legend>
                                            <div class="form-group">
                                                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Name", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Type", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.Type, warehouseTypeDDL, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Sellable", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    <label class="radio radio-inline">
                                                        @Html.RadioButton("IsSellable", true, true, new { @class = "radiobox IsSellable" })
                                                        <span>是</span>
                                                    </label>
                                                    <label class="radio radio-inline">
                                                        @Html.RadioButton("IsSellable", false, new { @class = "radiobox IsSellable" })
                                                        <span>否</span>
                                                    </label>
                                                </div>
                                                @Html.Label(" ", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.BCheckBox("DefaultDispatch", true, new { @class = "checkbox" })
                                                    @Html.BCheckBox("DefaultRMA", new { @class = "checkbox" })
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend>3rd Party Mapping</legend>
                                            <div class="form-group">
                                                @Html.Label("SC ID", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("SCID", SCList, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                                @Html.Label("SC Name", htmlAttributes: new { @class = "control-label col-sm-2" ,@readonly= "readonly"})
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("SCName", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                @Html.Label("SC Type", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("SCType", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("SC Sellable", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("SCSellable", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                @Html.Label("SC Default", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("SCDefault", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                @Html.Label("3P Warehouse", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownList("Warehouse3P", (List<SelectListItem>)ViewBag.Warehouse3PList, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend>Address</legend>
                                            <div class="form-group">
                                                @Html.Label("Company", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Company", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Phone", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Phone", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("City", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("City", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("State", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("State", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Postcode", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Postcode", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("Country", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Address1", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-6">
                                                    @Html.Editor("Address1", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                               
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Address2", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-6">
                                                    @Html.Editor("Address2", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset id="Availablefieldset">
                                            <legend>Available Shipping methods</legend>
                                            <div class="form-group">
                                                <table id="DataGridC" class="table table-striped table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Available Shipping methods</th>
                                                            <th>Carrier & API</th>
                                                            <th>Carrier Shipping Code</th>
                                                            <th>Carrier Package Code</th>
                                                            <th>Export</th>
                                                            <th>Battery</th>
                                                            <th>Box Req.</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="widget-footer">
                                   <button type="submit" class="btn btn-primary" id="save">儲存</button>
                                    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index")'">返回</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');
        var tableID = "#DataGridC";
        $(document).ready(function () {
             DataGridC = $(tableID).DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                columns: [
                    {
                        data: "ID",
                        className: 'select-checkbox',
                        orderable: false,
                        render: function (data, type, row, meta) {
                            return '<input name="Shippingmethods" class="tablechk" type="checkbox" value="' + row.ID + '">';
                        }
                    },
                    { data: "Name" },
                    { data: "Carrier" },
                    { data: "MethodType" },
                    { data: "BoxType" },
                    { data: "IsExport" },
                    { data: "IsBattery" },
                    { data: "InBox" },
                  
                ],
                ajax: {
                    traditional: true,
                    method: "get",//或post，自由決定，影響到Server端用FormCollection取值或Request.QueryString取得DataTables傳遞的資訊
                    url: "@Url.Action("ShippingMethodData")",
                    data: function (d) {
                        var Skulist = $("#gebruikerId").val();
                        d.Skulist = Skulist;
                        $("#gebruikerId").val(null).trigger('change');
                    }
                },
                serverSide: true,//啟用ServerSide模式
                //deferLoading: 0, //初始化DataTable時，不發出ajax
                orderMulti: false,
                "paging": false,
                "ordering": false,
                "info": true,
            });
          
            $("#SCID").change(function () {
                var selected = $(this).val();
                var stringArray = @Html.Raw(JsonConvert.SerializeObject(SCIDList, new Newtonsoft.Json.Converters.StringEnumConverter()));
                for (var i = 0; i < stringArray.length; i++) {
                    if (stringArray[i]["ID"] == selected) {
                        $("#SCName").val(stringArray[i]["Name"]);
                        $("#SCType").val(stringArray[i]["WarehouseType"]);
                        $("#SCDefault").val(stringArray[i]["IsDefault"]); 
                        $("#SCSellable").val(stringArray[i]["IsSellAble"]);
                    }
                }
            });
            $("#Type").change(function () {
                var selected = $(this).val();
                $("#DefaultRMA").prop("disabled", "");
                $("#DefaultDispatch").prop("disabled", "");
                $(".IsSellable").prop("disabled", "");
                if (selected == "Normal") {

                }
               else if (selected == "RMA") {
                    $("#DefaultRMA").prop("checked", true);
                    $("#DefaultDispatch").prop("checked", false);
                    $(".IsSellable").val(["False"]);
                    $("#DefaultRMA").prop("disabled", "disabled");
                    $("#DefaultDispatch").prop("disabled", "disabled");
                    $(".IsSellable").prop("disabled", "disabled");
                }
                else if (selected == "FBA") {

                }
                else if (selected == "DropShip") {
                    $("#DefaultDispatch").prop("checked", true);
                    $("#DefaultRMA").prop("checked", false);
                    $("#DefaultRMA").prop("disabled", "disabled");
                    $("#DefaultDispatch").prop("disabled", "disabled");
                }
                else if (selected == "Interim") {
                    $(".IsSellable").val(["False"]);
                    $(".IsSellable").prop("disabled", "disabled");
                   
                }
                else if (selected == "Winit") {

                }
                IsSellableChk();
            });
            $("#DefaultDispatch").click(function () {
                check = $(this).is(":checked");
                if (check) {
                    $("#DefaultRMA").prop("checked", false);
                } else {
                    $("#DefaultRMA").prop("checked", true);
                }              
            });
            $("#DefaultRMA").click(function () {
                check = $(this).is(":checked");
                if (check) {
                    $("#DefaultDispatch").prop("checked", false);
                } else {
                    $("#DefaultDispatch").prop("checked", true);
                }
            });
            $(".IsSellable").change(function () {
                IsSellableChk();
            });
        });
        function IsSellableChk() {
            var IsSellable = $(".IsSellable:checked").val();
            if (IsSellable == "False") {
                $(".tablechk").prop("checked", false);
                $(".tablechk").prop("disabled", "disabled");
                //$("#Availablefieldset").hide();
            }
            else {
                //$("#Availablefieldset").show();
                $(".tablechk").prop("disabled", "");
            }
            
        }
    </script>
}
