@model PurchaseOrderSys.Models.NetoGroup
@section styles{
    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <link href="~/Content/themes/icon.css" rel="stylesheet" />
    <style>
        .datagrid-btable .filterColumn:first-child td div {
            padding: 0
        }
    </style>
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <table id="DataGrid"></table>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
    <script src="~/scripts/datagrid-detailview.js"></script>
    <script src="~/scripts/jquery.number.min.js"></script>
    <script type="text/javascript">
        var pager, pageSize = 100, selectOption;
        var $table = $("#DataGrid"), datagrid;

        $(function () {
            var data = { optionType: ['Currency'] };

            website.AjaxUrl("@Url.Action("GetSelectOption", "Ajax")", 'post', data).done(function (response) {
                if (response.status) {
                    selectOption = response.data;

                    dataInit();
                } else {
                    alert(response.message);
                }
            });
        });

        function dataInit() {
            datagrid = new Datagrid("Neto Group 列表", "ID", "@Url.Action("GetData")");

            datagrid.dataInit.frozenColumns = [[
                { field: "ck", checkbox: true },
                { field: "ID", title: "@Html.DisplayNameFor(model => model.ID)", width: 100, align: "center", sortable: false },
                { field: "Name", title: "@Html.DisplayNameFor(model => model.Name)", width: 150, align: "center", sortable: false }
            ]];

            datagrid.dataInit.columns = [[
                {
                    field: "CurrencyID", title: "@Html.DisplayNameFor(model => model.CurrencyID)", width: 250, align: "center", sortable: false,
                    formatter: function (value, row, index) {
                        return website.IsEmpty(row.IsFilter) ? datagrid.setDropdown(row.ID, this.field, selectOption['Currency'], value.toString()) : value;
                    }
                }, {
                    field: "MinSpend", title: "@Html.DisplayNameFor(model => model.MinSpend)", width: 100, align: "center", sortable: false,
                    formatter: function (value, row, index) {
                        return website.IsEmpty(row.IsFilter) ? datagrid.setInputText(row.ID, this.field, value) : value;
                    }
                }, {
                    field: "SaleCategory", title: "@Html.DisplayNameFor(model => model.SaleCategory)", width: 150, align: "center", sortable: false,
                    formatter: function (value, row, index) {
                        return website.IsEmpty(row.IsFilter) ? datagrid.setInputText(row.ID, this.field, value) : value;
                    }
                }, {
                    field: "SaleRequire", title: "@Html.DisplayNameFor(model => model.SaleRequire)", width: 100, align: "center", sortable: false,
                    formatter: function (value, row, index) {
                        return website.IsEmpty(row.IsFilter) ? datagrid.setInputText(row.ID, this.field, value) : value;
                    }
                }, {
                    field: "Save", title: "Save", width: 90, align: "center", sortable: false,
                    formatter: function (value, row, index) {
                        if (website.IsEmpty(row.IsFilter)) {
                            return "<button type='button' class='btn btn-default btn-sm' id='btn-save' onclick='SaveData(" + row.ID + ")' disabled>SAVE</button>";
                        } else {
                            return value;
                        }
                    }
                }
            ]];

            $table.datagrid(datagrid.dataInit);

            pager = $table.datagrid("getPager");
            $(pager).pagination({
                pageSize: pageSize,
                showPageList: true,
                pageList: [100, 200, 300, 500],
                beforePageTest: "第",
                afterPageTest: "頁，共 {pages} 頁",
                displayMsg: "顯示 {from} 到 {to} 筆資料，共 {total} 筆資料"
            });
        }

        function getFilterData() {
            return {
                ID: $('.filterColumn .s-ID').val(),
                Name: $('.filterColumn .s-name').val(),
                CurrencyID: $('.filterColumn .s-currencyID').val(),
                MinSpend: $('.filterColumn .s-minSpend').val(),
                SaleCategory: $('.filterColumn .s-saleCategory').val(),
                SaleRequire: $('.filterColumn .s-saleRequire').val()
            };
        }

        function setFilterColumn(filterValue) {
            return {
                IsFilter: true,
                ID: "<input type='text' class='form-control s-ID' value='" + (!website.IsEmpty(filterValue['ID']) ? filterValue['ID'] : '') + "'>",
                Name: "<input type='text' class='form-control s-name' value='" + (!website.IsEmpty(filterValue['Name']) ? filterValue['Name'] : '') + "'>",
                CurrencyID: "<input type='text' class='form-control s-currencyID' value='" + (!website.IsEmpty(filterValue['CurrencyID']) ? filterValue['CurrencyID'] : '') + "'>",
                MinSpend: "<input type='text' class='form-control s-minSpend' value='" + (!website.IsEmpty(filterValue['MinSpend']) ? filterValue['MinSpend'] : '') + "'>",
                SaleCategory: "<input type='text' class='form-control s-saleCategory' value='" + (!website.IsEmpty(filterValue['SaleCategory']) ? filterValue['SaleCategory'] : '') + "'>",
                SaleRequire: "<input type='text' class='form-control s-saleRequire' value='" + (!website.IsEmpty(filterValue['SaleRequire']) ? filterValue['SaleRequire'] : '') + "'>",
                Save: "<button type='button' class='btn btn-default btn-sm' onclick='SaveData()'>SAVE ALL</button>"
            };
        }

        function onDataChange(ID) {
            var index = $table.datagrid("getRowIndex", ID) - 1;

            $table.datagrid('checkRow', index + 1);
            $("button#btn-save:eq(" + index + ")").removeAttr("disabled");
        }

        function SaveData(ID) {
            var dataList = [];

            if (website.IsEmpty(ID)) {
                var rows = $table.datagrid('getSelections');
                for (var i in rows) {
                    index = $table.datagrid('getRowIndex', rows[i].ID) - 1;
                    if (!$("button#btn-save:eq(" + index + ")").is("[disabled]")) {
                        dataList.push(setData(rows[i], index));
                        $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
                    }
                }
            } else {
                var index = $table.datagrid("getRowIndex", ID) - 1;
                row = $table.datagrid("getRows")[index + 1];
                dataList.push(setData(row, index));
                $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
            }

            if (dataList.length > 0) {
                dataList.forEach(function (data) {
                    $.ajax({
                        url: "@Url.Action("Update")",
                        type: "post",
                        data: data,
                        dataType: "json"
                    });
                });

                alert('Success!');
            };

            $table.datagrid('uncheckAll');
        }

        function setData(row, index) {
            return {
                ID: row.ID,
                Name: row.ID,
                CurrencyID: $("select#CurrencyID:eq(" + index + ")").val(),
                MinSpend: $("input#MinSpend:eq(" + index + ")").val(),
                SaleCategory: $("input#SaleCategory:eq(" + index + ")").val(),
                SaleRequire: $("input#SaleRequire:eq(" + index + ")").val()
            }
        }
    </script>
}