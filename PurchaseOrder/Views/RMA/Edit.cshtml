@model RMA
@{
    ViewBag.title = "修改RMA";
    var IsSellableWarehouse = EnumData.IsSellableWarehouse();
    var Warehouselist = EnumData.WarehouseDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var RMAStatusList = EnumData.RMAStatusList().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var RMAActionList = EnumData.RMAActionList().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var CompanyDDL = EnumData.CompanyDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var ChannelList = EnumData.ChannelList().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var RMAReasonList = EnumData.RMAReasonList();
    var Renewitem = EnumData.Renewitem().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
}
<style>
    .img {
        max-width: 20px;
        max-height: 20px;
        margin: 5px;
    }
    /*tr.trackinggroup {
        background-color: #808080 !important;
        color: white !important;
    }

        tr.trackinggroup:hover {
            background-color: #808080 !important;
            color: white !important;
        }*/
</style>
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>@ViewBag.title </h2>
                        <ul class="nav nav-tabs pull-right">
                            <li><a data-toggle="tab" href="#hb1">@ViewBag.title</a></li>
                        </ul>
                    </header>
                    <div>
                        <div class="widget-body no-padding">
                            <form id="data-form" class="form-horizontal" method="post" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                @Html.Hidden("ID")
                                @Html.Hidden("SID")
                                <div id="content" class="tab-content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="tab-pane" id="hb1">
                                        <font size="5">
                                            <b>
                                                RMA# @Model.ID &nbsp;&nbsp;
                                            </b>
                                        </font>
                                        <font size="4">
                                            SC RMA#
                                            <a href='https://dm.cwa.sellercloud.com/Orders/Orders_Return.aspx?id=@(Model.OrderID)' target="_blank">@Model.SCRMA</a>
                                        </font>
                                        <br />
                                        <font size="3">
                                            <b>
                                                @ChannelList.Where(x => x.Value == Model.Channel.ToString()).FirstOrDefault().Text
                                                @Model.SourceID
                                            </b>

                                        </font>
                                        <br />
                                        <font size="3">
                                            <b>
                                                @(CompanyDDL.Where(x => x.Value == Model.CompanyID.ToString()).FirstOrDefault()?.Text)
                                            </b>
                                        </font>

                                        <fieldset>
                                            <legend></legend>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @*@Html.Editor("OrderID", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                                                    <a href='https://dm.cwa.sellercloud.com/Orders/Orders_details.aspx?id=@(Model.OrderID)' target="_blank" class="control-label col-sm-1">@Model.OrderID</a>
                                                </div>

                                                @*<label class="control-label col-sm-1">Generate Prepaid Return Label</label>
        <div class="col-sm-9 col-lg-3">

        </div>*@

                                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.DropDownList("Status", RMAStatusList, htmlAttributes: new { @class = "form-control" })
                                                </div>

                                                @Html.Label("Create Date", htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    <input class="form-control" type="text" value="@Model.CreateAt.ToLocalTime()" readonly>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.SCUserID, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    <a href='https://feedback.ebay.com/ws/eBayISAPI.dll?ViewFeedback2&userid=@Model.SCUserID' target="_blank" class="control-label">@Model.SCUserID</a>
                                                    @*@Html.Editor("SCUserID", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                                                </div>
                                                @*@Html.LabelFor(model => model.SourceID, htmlAttributes: new { @class = "control-label col-sm-1" })
        <div class="col-sm-9 col-lg-3">
            @Html.Editor("SourceID", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>*@

                                                @*@Html.LabelFor(model => model.ReturnTracking, htmlAttributes: new { @class = "control-label col-sm-1" })
        <div class="col-sm-9 col-lg-3">
            @Html.Editor("ReturnTracking", new { htmlAttributes = new { @class = "form-control"} })
        </div>*@

                                                @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.DropDownList("Action", RMAActionList, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                                @Html.Label("Create By", htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.Editor("CreateBy", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.SourceCaseID, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.Editor("SourceCaseID", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @*@Html.LabelFor(model => model.Carrier, htmlAttributes: new { @class = "control-label col-sm-1" })
        <div class="col-sm-9 col-lg-3">
            @Html.Editor("Carrier", new { htmlAttributes = new { @class = "form-control" } })
        </div>*@
                                                @Html.Label("Warranty / Repair #", htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.Editor("Warranty", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>

                                                @Html.Label("Received Date", htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @{
                                                        var ReceivedDate = Model.RMASKU.Where(x => x.IsEnable).OrderByDescending(x => x.ReceivedAt).FirstOrDefault()?.ReceivedAt?.ToLocalTime();
                                                        <input class="form-control" type="text" value="@ReceivedDate" readonly>
                                                    }
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.DropDownListLabel("CompanyID", CompanyDDL, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                                </div>
                                                @*<label class="control-label col-sm-1">Tracking Status (Date)</label>
        <div class="col-sm-9 col-lg-3">
            Tracking Status (Event)
        </div>*@
                                                @Html.Label("Credit Memo #", htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @if (Model.CreditMemo.Any())
                                                    {
                                                        foreach (var RMAitem in Model.CreditMemo.Where(x => x.IsEnable))
                                                        {
                                                            <a href='@Url.Action("EditItem", "PurchaseOrderCM", new { id = RMAitem.ID })' target="_blank" class="control-label col-sm-1">@RMAitem.ID</a>
                                                        }
                                                    }
                                                    @* @Html.Editor("CreditMemo", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                                                </div>

                                                @Html.Label("Received By", htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @{
                                                        var ReceivedBy = Model.RMASKU.Where(x => x.IsEnable).OrderByDescending(x => x.ReceivedAt).FirstOrDefault()?.ReceivedBy;
                                                        <input class="form-control" type="text" value="@ReceivedBy" readonly>
                                                    }
                                                </div>
                                            </div>
                                        
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-sm-1" })
                                                <div class="col-sm-9 col-lg-3">
                                                    @Html.Editor("Country", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                </div>
                                                @*<label class="control-label col-sm-1"></label>
                <div class="col-sm-9 col-lg-3">

                </div>*@
                                              
                                            </div>
                                                @*<div class="form-group">
                                                @Html.LabelFor(model => model.Channel, htmlAttributes: new { @class = "control-label col-sm-1" })
                <div class="col-sm-9 col-lg-3">
                    @Html.DropDownListLabel("Channel", ChannelList, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                </div>
                                                <label class="control-label col-sm-1"></label>
                <div class="col-sm-9 col-lg-3">

                </div>
                                            </div>*@
                                        </fieldset>
                                        <fieldset>
                                            <legend></legend>
                                            <div class="form-group">
                                                <div class="col-sm-9 col-lg-offset-10">
                                                    <button type="button" id="ReturnBtn">Prepaid Return Label</button>
                                                    @if (Model.Status != "Closed")
                                                    {
                                                        @*<button type="button" id="Receivereturns">Receive returns</button>*@
                                                        @*<button type="button" id="Edititems">Edit items</button>
                        <button type="button" id="Removeitems">Remove items</button>*@
                                                    }
                                                </div>
                                            </div>
                                            <div class="row">
                                                <article class="col-xs-12">
                                                    <table id="DataGridC" class="table table-striped table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th><input type="checkbox" /></th>
                                                                <th>SKU</th>
                                                                <th>Product Name</th>
                                                                @*<th>UPC / EAN</th>*@
                                                                <th>訂單數</th>
                                                                <th>原因</th>
                                                                @*<th>Carrier</th>*@
                                                                @*<th>Tracking</th>*@
                                                                <th>Return Warehouse</th>
                                                                <th>Order Serial</th>
                                                                <th>Returned  Serial</th>
                                                                @*<th>實際收貨倉</th>*@
                                                                <th></th>
                                                                <th>Tracking</th>
                                                                <th>Carrier</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                        <tfoot>
                                                            @*<tr>
                                                                <td colspan="9"></td>
                                                            </tr>*@
                                                            <tr>
                                                                <td colspan="7" rowspan="7">
                                                                    <div class="col-sm-10 col-lg-6">
                                                                        <textarea rows="6" style="width:100%" id="textnote" class="undisabled"></textarea>
                                                                        <button type="button" id="addnote" style="float:right" class="btn btn-default btn-sm">Save Note</button>
                                                                        <span style="float:right">　</span>
                                                                        @*<button type="button" id="UploadImage" style="float:right" class="btn btn-default btn-sm">Upload Image</button>*@
                                                                        <input type="file" id="addimg" style="float:right" class="undisabled" multiple/>
                                                                    </div>
                                                                    <div class="col-sm-2 col-lg-6">
                                                                        <ul style="list-style-type:none;list-style-position: inside;padding-left: 0px;padding-left: 0px;" id="textnotelog">
                                                                            @foreach (var item in Model.PurchaseNote.OrderByDescending(x => x.ID))
                                                                            {
                                                                                <li>
                                                                                    <fieldset>
                                                                                        <legend>
                                                                                            @if (item.PurchaseNoteImg.Any())
                                                                                            {
                                                                                                foreach (var imgitem in item.PurchaseNoteImg)
                                                                                                {
                                                                                                    var href = imgitem.Img;
                                                                                                    <a class="aimg" href="@href" data-lightbox="roadtrip"><img class="img" src="@href" width="100px" height="100px" /></a>
                                                                                                }
                                                                                            }
                                                                                            @if (item.NoteType == "Url")
                                                                                            {
                                                                                                <a class="aimg" href="@item.Note" data-lightbox="roadtrip"><img class="img" src="@item.Note" width="100px" height="100px" /></a>
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                @item.Note
                                                                                            }
                                                                                            <br />
                                                                                            @( item.CreateAt.ToLocalTime().ToString("yyyy/MM/dd HH:mm:ss") + "  By  " + item.CreateBy)
                                                                                        </legend>
                                                                                    </fieldset>
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    </div>
                                                                </td>
                                                                <td colspan="2">Refund Statement</td>

                                                            </tr>
                                                            <tr>
                                                                <td>Item value & Shipping charge:</td>
                                                                <td>
                                                                    @((Model.FinalShippingFee ?? 0).ToString("###,##0.##"))
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>Restocking fee:</td>
                                                                <td>
                                                                    @Html.EditorFor(x => x.RestockingFee, new { htmlAttributes = new { @class = " changed" } })
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>Return shipping cost:</td>
                                                                <td>
                                                                    @Html.EditorFor(x => x.ReturnShippingCos, new { htmlAttributes = new { @class = " changed" } })
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>Other costs:</td>
                                                                <td>
                                                                    @Html.EditorFor(x => x.OtherCosts, new { htmlAttributes = new { @class = " changed" } })
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>Total refund:</td>
                                                                <td></td>
                                                            </tr>
                                                            <tr>
                                                                <td>Order balance:</td>
                                                                <td></td>
                                                            </tr>
                                                            @*<tr>
                                                                <td></td>
                                                                <td></td>
                                                            </tr>*@
                                                        </tfoot>
                                                    </table>
                                                </article>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="widget-footer">
                                    @if (Model.Status != "Closed")
                                    {
                                        <button type="submit" class="btn btn-primary" id="save">儲存</button>
                                    }
                                    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index")'">返回</button>

                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<div id="dialog">
    <div class="col-sm-9 col-lg-6">
        @Html.DropDownList("Renewitem", Renewitem, htmlAttributes: new { @class = "form-control undisabled" })
    </div>
    <input type="hidden" id="oid" class="undisabled" />
    <input type="hidden" id="osku" class="undisabled" />
    <button type="button" id="ChangeSKU">Renew item</button>
</div>
<div id="Returndialog">

</div>
<div id="Receivedialog">
    <input type="text" id="ReceiveNo" />
    <button type="button" id="Receivebtn">Receive item</button>
</div>
@section pagespecific {
    <link href="~/Content/css/lightbox.css" rel="stylesheet" />
    <script src="~/Scripts/lightbox.js"></script>
    <script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');
        var DataGrid;
        var tableID = "#DataGridC";
        var disabled = "";
         @if (Model.Status == "Closed")
         {
             @:disabled = "disabled";
         }
        $(document).ready(function () {
            DataGrid = $(tableID).DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                columns: [
                    {
                        data: "ID",
                        className: 'select-checkbox',
                        orderable: false,
                        render: function (data, type, row, meta) {
                            var html = '';
                            html += '<input type="hidden" name="RMAList[' + meta.row + '].ID" value="' + data + '"/>';
                            html += '<input type="hidden" name="RMAList[' + meta.row + '].SKUID" value="' + row.SKUID + '"/>';
                            if (row.tracking == '') {
                                html += '<input type="checkbox" name="RMAList[' + meta.row + '].SKU" value="' + data + '" ' + disabled+'/>';
                            }
                            return html;
                        }
                    },
                    {
                        data: "SKU", render: function (data, type, row, meta) {
                            return "<a  target='_blank' href='" + "@Url.Action("edit", "Sku")" + "?id=" + row.SKU + "#6'>" + row.SKU + "</a>";
                        }
                    },
                    { data: "ProductName" },
                    //{ data: "UPCEAN" },
                    { data: "QTYOrdered" },
                    {
                        data: "Reason",
                        render: function (data, type, row, meta) {
                            var RMAReasonList = @Html.Raw(Json.Encode(RMAReasonList.Select(x => new SelectListItem { Text = x.Value, Value = x.Key.ToString() }).ToList().Select(x => new { x.Text, x.Value }).ToList()));       
                            if (row.Model == "E" && "@Model.Status" != "Closed") {
                                var $select = $("<select " + disabled + "></select>", {
                                    "id": "RMAList[" + meta.row + "].Reason",
                                    "name": "RMAList[" + meta.row + "].Reason",
                                    "class": "RMAReasonList",
                                    "value": data
                                });
                                $.each(RMAReasonList, function (k, val) {
                                    var $option = $("<option></option>", {
                                        "text": val.Text,
                                        "value": val.Value
                                    });
                                    if (data == val.Value) {
                                        $option.attr("selected", "selected")
                                    }
                                    $select.append($option);
                                });
                                return $select.prop("outerHTML");
                            }
                            else {
                                var text = "";
                                $.each(RMAReasonList, function (k, val) {
                                    if (data == val.Value) {
                                        text = val.Text;
                                    }
                                });
                                return text;
                            }
                        }
                    },
                    {
                        data: "Warehouse",
                        render: function (data, type, row, meta) {
                            var IsSellable = @Html.Raw(Json.Encode(IsSellableWarehouse));
                            var Warehouselist = @Html.Raw(Json.Encode(Warehouselist.Select(x => new { x.Text, x.Value }).ToList()));
                            if (row.Model == "E" && (row.SerialsNo == null || row.SerialsNo == "")) {
                                var $select = $("<select " + disabled +"></select>", {
                                    "id": "RMAList[" + meta.row + "].Warehouse",
                                    "name": "RMAList[" + meta.row + "].Warehouse",
                                    "class": "Warehouselist",
                                    "value": data
                                });
                                $select.append("<option>select</option>");
                                $.each(Warehouselist, function (k, val) {
                                    var $option = $("<option></option>", {
                                        "text": val.Text,
                                        "value": val.Value
                                    });
                                    if (data == val.Value) {
                                        $option.attr("selected", "selected")
                                    }
                                    if (row.Reason != "16") {
                                        if ($.inArray(val.Value, IsSellable) > -1) {
                                            $option.hide();
                                        }
                                    }
                                    $select.append($option);
                                });
                                return $select.prop("outerHTML");
                            }
                            else {
                                var text = "";
                                $.each(Warehouselist, function (k, val) {
                                    if (data == val.Value) {
                                        text = val.Text;
                                    }
                                });
                                return text;
                            }
                        }
                    },
                    { data: "OrderSerialsNo" },
                    {
                        data: "ReturnedSerialsNo",
                        render: function (data, type, row, meta) {
                            var html = '';
                            if (row.ReturnedSerialsNo == null || row.ReturnedSerialsNo == "") {
                                html = '<input type="text" id="RMAList[' + meta.row + '].ReceiveNo" name="RMAList[' + meta.row + '].ReceiveNo" ' + disabled +'/>';
                            }
                            else {
                                html =  data;
                            }
                            return html;
                        }
                    },
                    //{data: "TrWarehouse"},
                    {
                        data: "ID",
                        render: function (data, type, row, meta) {
                            //var html = "<a  class='btn btn-default btn-sm ChangeSKU'>Prepaid Return Label</a>";
                            var html = "";
                             @*@if (Model.Status != "Closed")
                             {
                                 @:html += " <a href='@Url.Action("Returnedserials")?ID=" + data + "' class='btn btn-default btn-sm'>Receive returns</a>";
                             }*@
                            if (row.ReturnedSerialsNo != "" && row.ReturnedSerialsNo != null) {
                                html += " <a val='" + row.RMASerialsLlistID + "'  osku='" + row.SKU + "' class='btn btn-default btn-sm ChangeSKU'>Renew item</a>";
                                if (row.CMID == "" || row.CMID == null) {
                                    html += "  <a val='" + row.ReturnedSerialsNo + "' osku='" + row.SKU + "' class='btn btn-default btn-sm CMSerialsLlis' target='_blank' href='@Url.Action("CreateRMACM","PurchaseOrderCM",new {RMAID=Model.ID })&SerialsLlis=" + row.ReturnedSerialsNo + "'>Dispose item</a>";
                                }
                                else {
                                    html += "  <a val='" + row.RMASerialsLlistID + "' osku='" + row.SKU + "'  target='_blank' href='@Url.Action("EditItem", "PurchaseOrderCM")?id=" + row.CMID + "'>" + row.CMID+"</a>";
                                }
                            }
                            //else {
                            //    html = " <a val='" + data + "'  oSKU='" + row.SKU + "' class='btn btn-default btn-sm ChangeSKU'>Renew item</a>";
                            //}
                            return html;
                        }
                    },
                    { data: "trackingID" },
                    { data: "Carrier" },
                ],
                ajax: {
                    traditional: true,
                    method: "get",//或post，自由決定，影響到Server端用FormCollection取值或Request.QueryString取得DataTables傳遞的資訊
                    url: "@Url.Action("GetEditSKUData")",
                    data: function (d) {
                        d.ID = @Model.ID;
                    },
                    dataSrc: function (json) {
                        if (json.success) {
                            return json.data;
                        } else {
                            alert(json.errmsg);
                            return "";
                        }
                    }
                },
                serverSide: true,//啟用ServerSide模式
                //deferLoading: 0, //初始化DataTable時，不發出ajax
                orderMulti: false,
                "paging": false,
                "ordering": false,
                "info": true,
                "searching": false,
                "columnDefs": [
                    { "visible": false, "targets": 9 },
                    { "visible": false, "targets": 10 }
                ],
                'rowGroup': {
                    "startRender": null,
                    "dataSrc": 'trackingID',
                    "endRender": function (rows, group) {
                        var html = '<tr class="group"><td colspan="9"></td></tr><tr class="group"><td></td><td>SKU</td><td>Product Name</td><td>訂單數</td><td>原因</td><td>Return Warehouse</td><td>Order Serial</td><td>Returned  Serial</td><td></td></tr>';
                        if (rows[0] == DataGrid.rows()[0].length-1) {
                            html = "";
                        }
                        var ajaxhtml = "";
                        $.ajax({
                            async: false,
                            traditional: true,
                            type: "post",
                            url: "@Url.Action("Trackgroup")",
                            data: {
                                ID: group,
                                rows: rows
                            },
                            success: function (data) {
                                if (data.status) {
                                    ajaxhtml = data.html;
                                }
                                else {

                                }
                            }
                        });


                        return $(ajaxhtml + html);
                    },

                },
                //"drawCallback": function (settings) {
                //    var api = this.api();
                //    var rows = api.rows({ page: 'current' }).nodes();
                //    var last = null;
                //    var different = false;
                //    api.column(9, { page: 'current' }).data().each(function (group, i, $currTable) {
                //        if (last !== group) {
                //            last = group;
                //            different = true;
                //        }
                //        if (different || i== $currTable.length-1) {
                //            different = false;
                //            if (i !== 0) {
                //            }

                //                if (i != $currTable.length - 1) {
                //                    $(rows).eq(i).after(
                //                        '<tr class="group"><td></td><td>SKU</td><td>Product Name</td><td>訂單數</td><td>原因</td><td>Return Warehouse</td><td>Order Serial</td><td>Returned  Serial</td><td></td></tr>'
                //                    );
                //                }
                //                $(rows).eq(i).after(
                //                    '<tr class="group"><td colspan="7"></td><td>Carrier : ' + $currTable.rows(rows[i]._DT_RowIndex).data()[0]["Carrier"] + '</td><td>tracking : ' + group + '</td></tr>'
                //                );

                //        }
                //    });
                //},
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    //Item value
                    var Itemvalue = 0;
                    data.forEach(function (e) {
                        Itemvalue += e.UnitPrice;
                    })
                    $('tr:eq(2) td:eq(1)', api.table().footer()).html(thousandComma(Itemvalue));
                    //Shipping charge
                    var Shippingcharge =@(Model.FinalShippingFee??0);
                    //Restocking fee:
                    var Restockingfee = intVal($("#RestockingFee").val());
                    //Return shipping cost
                    var Returnshippingcost = intVal($("#ReturnShippingCos").val());
                    //Other costs
                    var Othercosts = intVal($("#OtherCosts").val());
                    //Total refund
                    var Totalrefund = Itemvalue - Shippingcharge + Restockingfee;
                    $('tr:eq(6) td:eq(1)', api.table().footer()).html(thousandComma(Totalrefund));
                    //Order balance
                    var Orderbalance = Itemvalue + Shippingcharge + Totalrefund - Returnshippingcost - Othercosts;
                    $('tr:eq(7) td:eq(1)', api.table().footer()).html(thousandComma(Orderbalance));
                }
            });
            $("#btnsearch").click(function () {
                DataGrid.draw();
            });
            $(".changed").change(function () {
                DataGrid.draw();
            });
            $(tableID + ' tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = DataGrid.row(tr);
                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    var SKUid = $(this).attr("SKUid");
                    row.child(GetSerialList(SKUid)).show();
                    tr.addClass('shown');
                }
            });
            $("#Removeitems").on("click", function () {
                var dataList = [];
                $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                if (confirm("是否確定刪除")) {
                    $.ajax({
                        traditional: true,
                        type: "post",
                        url: "@Url.Action("RemoveData")",
                        data: {
                            IDList: dataList,
                            ID:@Html.Display("ID"),
                        },
                        success: function (data) {
                            if (data.status) {
                                $(tableID + ' thead input[type="checkbox"]').prop("checked", false);
                                DataGrid.draw();
                            }
                            else {
                                alert(data.Errmsg);
                                DataGrid.draw();
                            }
                        }
                    });
                }
            });
            $("#Edititems").on("click", function () {
                var dataList = [];
                $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                $.ajax({
                    traditional: true,
                    type: "post",
                    url: "@Url.Action("EditSKUData")",
                    data: {
                        IDList: dataList,
                        ID:@Html.Display("ID"),
                    },
                    success: function (data) {
                        if (data.status) {
                            $(tableID + ' thead input[type="checkbox"]').prop("checked", false);
                            DataGrid.draw();
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("body").on("change", ".RMAReasonList,.Warehouselist", function () {
                var tr = $(this).closest("tr");
                $(tr).children('td').css({ 'background-color': 'yellow' });
            });
            $("#dialog").dialog({
                autoOpen: false,
                width: 800,
            });
            $("#Returndialog").dialog({
                autoOpen: false,
                width: 900,
                position: { my: "center", at: "top" },
                title: 'Prepaid Return Label',
                modal: true
            });
            $("#Receivedialog").dialog({
                autoOpen: false,
                title: 'Receive returns',
                width: 400,
            });
            $("body").on("click", ".ChangeSKU", function () {
                var val = $(this).attr("val");
                var osku = $(this).attr("osku");
                $("#oid").val(val);
                $("#osku").val(osku);
                $("#dialog").dialog({
                    title: "Change SKU"
                });
                $("#dialog").dialog("open");
                return false;
            });
            $("body").on("click", "#ReturnBtn", function () {
                var dataList = [];
                $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                if (dataList.length > 0) {
                    $("#Returndialog").html("SC資料讀取中.........");
                    $.ajax({
                        traditional: true,
                        type: "get",
                        url: "@Url.Action("ReturnLabel")",
                        data: {
                            id: @Html.DisplayFor(x=>x.ID),
                            IDList: dataList
                        },
                        success: function (data) {
                            if (data.status) {
                                $("#Returndialog").html(data.html);
                            }
                            else {
                                alert(data.Errmsg);
                            }
                        }
                    });
                    $("#Returndialog").dialog("open");
                }
                else {
                    alert("必須勾選項目");
                }
                return false;
            });
            $("body").on("click", "#Receivereturns", function () {
                $("#Receivedialog").dialog("open");
            });
            $("body").on("click", "#Receivebtn", function () {
                $.ajax({
                    traditional: true,
                    type: "post",
                    url: "@Url.Action("Receiveitem")",
                    data: {
                      id: @Html.DisplayFor(x=>x.ID),
                        Serial: $("#ReceiveNo").val(),
                    },
                    success: function (data) {
                        if (data.status) {
                            window.location.reload();
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("#ChangeSKU").click(function () {
                var oid = $("#oid").val();
                var osku =  $("#osku").val();
                var NewSKU = $("#Renewitem").val();
                alert("新的SKU：" + osku + NewSKU);
                $.ajax({
                    traditional: true,
                    type: "post",
                    url: "@Url.Action("ChangeSKU")",
                    data: {
                        oid: oid,
                        NewSKU: NewSKU
                    },
                    success: function (data) {
                        if (data.status) {
                            window.location.reload();
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("#UploadImage").click(function () {
                var data = new FormData();
                data.append("ID", "@Html.DisplayFor(x=>x.ID)");
                var files = $("#addimg").get(0).files;
                if (files.length > 0) {
                    data.append("Img", files[0]);
                }
                $.ajax({
                    traditional: true,
                    type: "post",
                    contentType: false,
                    processData: false,
                    dataType: "json",
                    url: "@Url.Action("CreatNoteImg")",
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            $("#addimg").val("");
                            $("#textnotelog li").remove();
                            datalistSet(data);

                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("#addnote").click(function () {
                var data = new FormData();
                data.append("ID", "@Html.DisplayFor(x=>x.ID)");
                data.append("Note", $("#textnote").val());
                var files = $("#addimg").get(0).files;
                $.each(files, function (i, value) {
                    data.append("Img", value);
                });
                $.ajax({
                    traditional: true,
                    type: "post",
                    contentType: false,
                    processData: false,
                    dataType: "json",
                    url: "@Url.Action("CreatNote")",
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            $("#textnote").val("");
                            $("#addimg").val("");
                            datalistSet(data);
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("body").on("click", ".addgnote", function () {
                var dataList = [];
                $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                var data = new FormData();
                var trackinggroup = $(this).closest(".trackinggroup");
                var id = trackinggroup.find(".RMAOrderTracking");
                var textgnote = trackinggroup.find(".textgnote");
                var addgimg = trackinggroup.find(".addgimg");
                var textgnotelog = trackinggroup.find(".textgnotelog");
                data.append("ID", $(id).val());
                data.append("IDList", dataList);
                data.append("Note", $(textgnote).val());
                var files = $(addgimg).get(0).files;
                $.each(files, function (i, value) {
                    data.append("Img", value);
                });
                if ($(id).val() == "0" && dataList.length == 0) {
                    alert("請勾選序號");
                    $(this).val("");
                    return false;
                }
                $.ajax({
                    traditional: true,
                    type: "post",
                    contentType: false,
                    processData: false,
                    dataType: "json",
                    url: "@Url.Action("CreatGNote")",
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            $(textgnote).val("");
                            $(addgimg).val("");
                            datalistSet(data, $(textgnotelog).attr("id"));
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
            $("body").on("click", ".CMSerialsLlis", function () {
                var val = $(this).attr("val");
                if (confirm("是否確定Dispose item:" + val)) {
                    return true;
                }
                else {
                    return false;
                }
            });

            $("body").on("change", ".Trackingchange", function () {
                var trackinggroup = $(this).closest(".trackinggroup");
                var id = $(trackinggroup).find(".RMAOrderTracking");
                var dataList = [];
                $(DataGrid.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                if ($(id).val() == "0" && dataList.length == 0) {
                    alert("請勾選序號");
                    $(this).val("");
                    return false;
                }
                var data = new FormData();
                var Carrier = $(trackinggroup).find(".Carrier");
                var ReturnTracking = $(trackinggroup).find(".ReturnTracking");
                data.append("ID", $(id).val());
                data.append("IDList", dataList);
                data.append("Carrier", $(Carrier).val());
                data.append("ReturnTracking", $(ReturnTracking).val());
                $.ajax({
                    traditional: true,
                    type: "post",
                    contentType: false,
                    processData: false,
                    dataType: "json",
                    url: "@Url.Action("CreatGTracking")",
                    data: data,
                    success: function (data) {
                        if (data.status) {
                           
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });

            $("body").on("change", ".RMAReasonList", function () {
                
                var tr = $(this).closest("tr");
                var Warehouselist = tr.find(".Warehouselist");
                var RMAReasonList = tr.find(".RMAReasonList");
                if ($(RMAReasonList).val() == "16") {
                    $(Warehouselist).find("option").each(function (index) {
                        $(this).show();
                    });
                }
                else {
                    var IsSellable = @Html.Raw(Json.Encode(IsSellableWarehouse));
                    $(Warehouselist).find("option").each(function (index) {
                        if ($.inArray($(this).val(), IsSellable) > -1) {
                            $(this).attr("selected", false);
                            $(this).hide();
                        }   
                    });
                }
            });
        });
        function GetSerialList(ID) {
            var div = $('<div style="border:2px blue solid;" />').addClass('loading').text('Loading...');
            $.ajax({
                type: "post",
                url: "@Url.Action("GetSerialList")",
                data: {
                    ID: ID
                },
                success: function (data) {
                    if (data.status) {
                        div.html(data.partial).removeClass('loading');
                    }
                    else {
                        val = data.Errmsg;
                    }
                }
            });
            return div;
        }
        function Success(data) {
            $("#dialog").dialog("close");
            if (data.status == false) {
                alert(data.Msg);
            }
            if (data.reload == true) {
                window.location.reload();
            }
        }
        function datalistSet(data, notelog) {
            if (notelog == null) {
                notelog = "#textnotelog";
            }
            else {
                notelog = "#" + notelog;
            }
            $(notelog + " li").remove();
            data.datalist.forEach(function (value) {
                var href = "";
                var html = "";
                var CreateAt = "";
                var CreateBy = "";
                $.each(value.PurchaseNoteImg, function (index, val) {
                    href = val.Img;
                    CreateAt = value.CreateAt;
                    CreateBy = value.CreateBy;
                    html += "<a class='aimg' href='" + href + "' data-lightbox='roadtrip'><img class='img' src='" + href + "' width='100px' height='100px' /></a>";
                });

                if (value.NoteType == "Url") {
                    href = value.Note;
                    CreateAt = value.CreateAt;
                    CreateBy = value.CreateBy;
                    html += "<a class='aimg' href='" + href + "' data-lightbox='roadtrip'><img class='img' src='" + href + "'  width='100px' height='100px' /></a>";
                }
                else if (value.NoteType == "" || value.NoteType == "txt") {
                    CreateAt = value.CreateAt;
                    CreateBy = value.CreateBy;
                    html += value.Note;
                }
                $(notelog).append("<li><fieldset><legend>" + html + "<br />" + CreateAt + "；" + CreateBy + "</legend></fieldset></li>");
            });
        }
        var Preview = new function () {

            var root = $("#data-form");

            // 連續的圖片編碼
            var imgcode = '';

            // 選取發生改變
            this.change_file = function () {
                root.on("change", ".ImgFile", function () {
                    show(this);
                });
            }

            // 批次圖片，先清空後再插入
            var show = function (input) {
                if (input.files && input.files[0]) {
                    clean(input.ID);
                    each_img(input.files, input.id);
                }
            }

            // 批次讀取，最後再一次寫入
            var each_img = function (files, ID) {

                $.each(files, function (index, file) {
                    var src = URL.createObjectURL(file);
                    create_imgcode(src);
                });

                // 放置預覽元素後重設
                root.find("#" + ID + "preview").html(imgcode);
                reset();
            }


            // 建立圖片
            var create_imgcode = function (src) {
                imgcode += '<a class="aimg" href="' + src + '" data-lightbox="roadtrip"><img class="img" src="' + src + '" /></a>';
            }


            // 清空預覽區域
            var clean = function (ID) {
                root.find("#" + ID + "preview").empty();
            }

            // 還原 input[type=file]
            var reset = function () {
                imgcode = '';
                //root.find("#VendorInvoice").val(null);
            }
        }
        // 執行
        Preview.change_file();
    </script>
    @if (Model.Status == "Closed")
    {
        <script type="text/javascript">     
            $(document).ready(function () {
                $("body").find("input,select,textarea").prop("disabled", "disabled");
                $("body").find(".undisabled").prop("disabled", "");
            });
        </script>
    }
}
