@model  CreditMemo
@{
    ViewBag.title = "修改CM單";
    var CMTypeDDL = EnumData.CMTypeDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var CompanyDDL = EnumData.CompanyDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var VendorDDL = EnumData.VendorDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var DefaultSelect = PurchaseOrderSys.App_GlobalResources.Resource.DefaultSelect;
    var CMStatusDDL = EnumData.CMStatusDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var ShippingStatusDDL = EnumData.ShippingStatusDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var CreditStatusDDL = EnumData.CreditStatusDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
    var Warehouselist = (IEnumerable<SelectListItem>)ViewBag.Warehouselist;
    var CurrencyDDL = EnumData.CurrencyDDL().Select(x => new SelectListItem { Text = x.Value, Value = x.Key }).ToList();
}
<style>
    .img {
        max-width: 20px;
        max-height: 20px;
        margin: 5px;
    }
</style>
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>@ViewBag.title</h2>
                        <ul class="nav nav-tabs pull-right">
                            <li><a data-toggle="tab" href="#hb1">@ViewBag.title</a></li>
                        </ul>
                    </header>

                    <div>
                        <div class="widget-body no-padding">
                            <form id="data-form" class="form-horizontal" method="post" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.ID)
                                <input type="hidden" name="IsEnable" value="True">

                                <div id="content" class="tab-content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="tab-pane" id="hb1">
                                        <fieldset>
                                            <legend>@ViewBag.title</legend>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.CompanyID, CompanyDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                                @Html.LabelFor(model => model.VendorID, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.VendorID, VendorDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Company No", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("CompanyNo", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.Label("Vendor No", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.Editor("VendorNo", new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CMStatus, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.CMStatus, CMStatusDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CMStatus, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.InvoiceDate)
                                                    @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CMType, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.CMType, CMTypeDDL, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CMType, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new Dictionary<string, object> { { "class", "form-control" } } })
                                                    @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CMDate, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.CMDate)
                                                    @Html.ValidationMessageFor(model => model.CMDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShippingStatus, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.ShippingStatus, ShippingStatusDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.ShippingStatus, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.LabelFor(model => model.CreditStatus, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.CreditStatus, CreditStatusDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CreditStatus, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.ShippedDate)
                                                    @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.LabelFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.ShippedDate)
                                                    @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Carrier, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.Carrier, new { htmlAttributes = new Dictionary<string, object> { { "class", "form-control" } } })
                                                    @Html.ValidationMessageFor(model => model.Carrier, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.LabelFor(model => model.CreditAmount, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.CreditAmount, new { htmlAttributes = new Dictionary<string, object> { { "class", "form-control" } } })
                                                    @Html.ValidationMessageFor(model => model.CreditAmount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Tracking, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.EditorFor(model => model.Tracking, new { htmlAttributes = new Dictionary<string, object> { { "class", "form-control" } } })
                                                    @Html.ValidationMessageFor(model => model.Tracking, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.Label("Vendor CM", htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @*@Html.Editor("VendorInvoice", new { htmlAttributes = new { @class = "form-control" } })*@
                                                    <input type='file' class="ImgFile" name="VendorCM" id="VendorCM" multiple>
                                                </div>
                                                <div class="col-sm-9 col-lg-2">
                                                    <div class="opreview">
                                                        @foreach (var item in Model.ImgFile.Where(x => x.IsEnable && x.ImgType == "VendorInvoice"))
                                                        {
                                                            <a class="aimg" href="@item.Url" data-lightbox="roadtrip"><img class="img" src="@item.Url" /></a>
                                                        }
                                                    </div>
                                                    <div class="preview" id="VendorCMpreview">
                                                    </div>
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend>Items Ordered</legend>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PurchaseOrder.WarehouseID, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.PurchaseOrder.WarehouseID, Warehouselist, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseOrder.WarehouseID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PurchaseOrder.Currency, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    @Html.DropDownListFor(model => model.PurchaseOrder.Currency, CurrencyDDL, DefaultSelect, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseOrder.Currency, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PurchaseOrder.Tax, htmlAttributes: new { @class = "control-label col-sm-2" })
                                                <div class="col-sm-9 col-lg-2">
                                                    <div class="col-sm-2 col-lg-2">
                                                        @Html.CheckBox("TaxShow", true, new { @class = "form-control" })
                                                    </div>
                                                    <div class="col-sm-10 col-lg-10">
                                                        @Html.EditorFor(model => model.PurchaseOrder.Tax, new { htmlAttributes = new Dictionary<string, object> { { "class", "form-control" } } })
                                                        @Html.ValidationMessageFor(model => model.PurchaseOrder.Tax, "", new { @class = "text-danger" })
                                                    </div>


                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend></legend>
                                            <div class="form-group">
                                                <div class="col-sm-9 col-lg-2">
                                                    <button type="button" id="Edititems">Edit items</button>
                                                    <button type="button" id="Removeitems">Remove items</button>
                                                </div>
                                                <div class="col-lg-offset-10">
                                                    <a type="button" href="@Url.Action("ReturnItems",new {Model.ID})" class='btn btn-danger btn-sm'>Return Items</a>
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <div class="row">
                                                <article class="col-xs-12">
                                                    <table id="DataGridC" class="table table-bordered table-striped text-center dataTable no-footer">
                                                        <thead>
                                                            @if (Model.CMType == "CreditNote")
                                                            {

                                                                <tr>
                                                                    <th></th>
                                                                    <th></th>
                                                                    <th>SKU</th>
                                                                    <th>Vendor SKU</th>
                                                                    <th>Name</th>
                                                                    <th>QTY Ordered</th>
                                                                    <th>QTY Returned</th>
                                                                    <th>Credit QTY</th>
                                                                    <th>Credit</th>
                                                                    <th>Subtotal (currency)</th>
                                                                </tr>
                                                            }
                                                            else if (Model.CMType == "Replacement")
                                                            {
                                                                <tr>
                                                                    <th></th>
                                                                    <th></th>
                                                                    <th>SKU</th>
                                                                    <th>Vendor SKU</th>
                                                                    <th>Name</th>
                                                                    <th>QTY Ordered</th>
                                                                    <th>QTY Returned</th>
                                                                    <th>Credit QTY</th>
                                                                    <th>QTY Received</th>
                                                                    <th>Balance</th>
                                                                </tr>
                                                            }
                                                        </thead>
                                                        <tbody></tbody>
                                                        <tfoot>
                                                            @*<tr>
                                                                    <td colspan="8">
                                                                        <select id="gebruikerId" name="gebruikerId" class="form-control" style="width:50%"></select>
                                                                        <button type="button" id="addsku">Add SKU</button>
                                                                    </td>
                                                                    <td></td>
                                                                    <td></td>
                                                                </tr>*@
                                                            @if (Model.CMType == "CreditNote")
                                                            {
                                                                <tr>
                                                                    <td colspan="8" rowspan="5">
                                                                        <div class="col-sm-10 col-lg-10">
                                                                            <textarea rows="20" style="width:100%" id="textnote"></textarea>
                                                                            <button type="button" id="addnote" style="float:right">Add Note</button>
                                                                        </div>
                                                                        <div class="col-sm-2 col-lg-2">
                                                                            <ul style="list-style-type:none;list-style-position: inside;padding-left: 0px;padding-left: 0px;" id="textnotelog">
                                                                                @*@if (Model.cr != null)
                                                                                    {
                                                                                        foreach (var item in Model.CreditMemo)
                                                                                        {
                                                                                            <li>@(item.CreateBy + "： " + item.CreateAt.ToString("yyyy/MM/dd HH:mm:ss"))</li>
                                                                                        }
                                                                                    }*@
                                                                            </ul>
                                                                        </div>
                                                                    </td>
                                                                    <td>Total:</td>
                                                                    <td></td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Tax:</td>
                                                                    <td></td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Grand Total:</td>
                                                                    <td></td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Total Paid:</td>
                                                                    <td></td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Balance:</td>
                                                                    <td></td>
                                                                </tr>
                                                            }
                                                            else if (Model.CMType == "Replacement")
                                                            {
                                                                <tr>
                                                                    <td colspan="10">
                                                                        <div class="col-sm-10 col-lg-10">
                                                                            <textarea rows="20" style="width:100%" id="textnote"></textarea>
                                                                            <button type="button" id="addnote" style="float:right">Add Note</button>
                                                                        </div>
                                                                        <div class="col-sm-2 col-lg-2">
                                                                            <ul style="list-style-type:none;list-style-position: inside;padding-left: 0px;padding-left: 0px;" id="textnotelog">
                                                                                @*@if (Model.CreditMemo != null)
                                                                                    {
                                                                                        foreach (var item in Model.CreditMemo)
                                                                                        {
                                                                                            <li>@(item.CreateBy + "： " + item.CreateAt.ToString("yyyy/MM/dd HH:mm:ss"))</li>
                                                                                        }
                                                                                    }*@
                                                                            </ul>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tfoot>
                                                    </table>
                                                </article>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                                <div class="widget-footer">
                                    <button type="submit" class="btn btn-primary" id="save">儲存</button>
                                    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index")'">返回</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <link href="~/Content/css/lightbox.css" rel="stylesheet" />
    <script src="~/Scripts/lightbox.js"></script>
    <script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');
        var tableID = "#DataGridC";
        var DataGridC;
        $(document).ready(function () {
            DataGridC = $(tableID).DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                columns: [
                    {
                        data: "ck",
                        className: 'select-checkbox',
                        orderable: false,
                        render: function (data, type, row, meta) {
                            if (row.ID == null) {
                                return '<input type="checkbox" value="' + row.SKU + '">';
                            }
                            else {
                                return '<input type="checkbox" value="' + row.ID + '">';
                            }
                        }
                    },
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },
                    { data: "SKU" },
                    { data: "VendorSKU" },
                    { data: "Name" },
                    {
                        data: "QTYOrdered", render: function (data, type, row) {
                            if (row.Model == "E") {
                                return '<input class="form-control" type="text" onchange="Calculation(this,\'QTYOrdered\',\'' + row.SKU + '\',' + data + ',' + row.ID + ')"  value = ' + data + ' > ';
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        data: "QTYReturned", render: function (data, type, row) {
                            return data;
                            //if (row.Model == "E") {
                            //    return '<input class="form-control" type="text" onchange="Calculation(this,\'QTYReturned\',\'' + row.SKU + '\',' + data + ',' + row.ID + ')"  value = ' + data + ' > ';
                            //}
                            //else {
                            //    return data;
                            //}
                        }
                    },
                    {
                        data: "CreditQTY", render: function (data, type, row) {
                            if (row.Model == "E") {
                                return '<input class="form-control" type="text" onchange="Calculation(this,\'CreditQTY\',\'' + row.SKU + '\',' + data + ',' + row.ID + ')"  value = ' + data + ' > ';
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    @if (Model.CMType == "CreditNote")
                    {
                        @: { data: "Credit", render: function (data, type, row) { if (row.Model == "E") { return '<input class="form-control" type="text" onchange="Calculation(this,\'Credit\',\'' + row.SKU + '\',' + data + ',' + row.ID + ')"  value = ' + thousandComma(data) + '  > '; } else { return data; } } },
                        @:{ data: "Subtotal", render: function (data, type, row) { return thousandComma(data); } }
                    }
                    else if (Model.CMType == "Replacement")
                    {
                       @: { data: "QTYReceived", render: function (data, type, row) { if (row.Model == "E") { return '<input class="form-control" type="text" onchange="Calculation(this,\'QTYReceived\',\'' + row.SKU + '\',' + data + ',' + row.ID + ')"  value = ' + thousandComma(data) + '  > '; } else { return data; } } },
                        @:{ data: "Balance", render: function (data, type, row) { return thousandComma(data); } }
                    }



                ],
                ajax: {
                    traditional: true,
                    method: "get",//或post，自由決定，影響到Server端用FormCollection取值或Request.QueryString取得DataTables傳遞的資訊
                    url: "@Url.Action("CMSkuNumberList", "Ajax")",
                    data: function (d) {
                        var Skulist = $("#gebruikerId").val();
                        d.Skulist = Skulist;
                        $("#gebruikerId").val(null).trigger('change');
                    }
                },
                serverSide: true,//啟用ServerSide模式
                //deferLoading: 0, //初始化DataTable時，不發出ajax
                orderMulti: false,
                "paging": false,
                "ordering": false,
                "info": true,
                "searching": false,
                "footerCallback": function (row, data, start, end, display) {
                    @if (Model.CMType == "CreditNote")
                    {
                        @:var api = this.api(), data;
                       // Remove the formatting to get integer data for summation
                    @:var intVal = function (i) {

                         @:return typeof i === 'string' ?
                            @:i.replace(/[\$,]/g, '') * 1 :
                           @: typeof i === 'number' ?
                            @:    i : 0;
                   @: };
                    ////Total
                   @: total = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                   @: $('tr:eq(0) td:eq(2)', api.table().footer()).html(thousandComma(total));//Total
                    //Tax:
                   @: var TaxVal = $("#Tax").val();
                   @: Tax = total - (total / (1 + TaxVal / 100));
                   @: $('tr:eq(1) td:eq(1)', api.table().footer()).html(thousandComma(Tax));//TotalDiscount
                    //Grand Total:
                   @: GrandTotal = total;
                   @: $('tr:eq(2) td:eq(1)', api.table().footer()).html(thousandComma(GrandTotal));
                    //Credit Paid:
                   @: CreditPaid = 0;
                   @: $('tr:eq(3) td:eq(1)', api.table().footer()).html(thousandComma(CreditPaid));
                    //Balance:
                  @:  Balance = GrandTotal - CreditPaid;
                  @:  $('tr:eq(4) td:eq(1)', api.table().footer()).html(thousandComma(Balance));

                    }
                }
            });
            $("#CMType").on("change", function () {
                window.location.href = "@Url.Action("CreateCM", new { ID=Model.PurchaseOrderID })?CMTypeVal=" + $(this).val();
            });
            $("#Edititems").on("click", function () {
                var dataList = [];
                $(DataGridC.$('input[type="checkbox"]:checked').each(function () {
                    dataList.push($(this).val());
                }));
                $.ajax({
                    traditional: true,
                    type: "post",
                    url: "@Url.Action("EditCMSKUData")",
                    data: {
                        IDList: dataList,
                    },
                    success: function (data) {
                        if (data.status) {
                            DataGridC.draw();
                        }
                        else {
                            alert(data.Errmsg);
                        }
                    }
                });
            });
        });
          function Calculation(x, type, SKU, oval, ID) {
            $.ajax({
                type: "post",
                url: "@Url.Action("CMSkuNumberListEdit", "Ajax")",
                data: {
                    SKU: SKU,
                    type: type,
                    oval: oval,
                    val: $(x).val(),
                    ID: ID
                },
                success: function (data) {
                    if (data.status) {
                        DataGridC.draw();
                    }
                    else {
                        alert(data.Errmsg);
                    }
                }
            });
        }
        function GetSerialList(d) {
            var div = $('<div style="border:2px blue solid;" />').addClass('loading').text('Loading...');
            $.ajax({
                type: "post",
                url: "@Url.Action("GetSerialList")",
                data: {
                    ID: d.ID
                },
                success: function (data) {
                    if (data.status) {
                        div.html(data.partial).removeClass('loading');
                    }
                    else {
                        val = data.Errmsg;
                    }
                }
            });
            return div;
        }
        var Preview = new function () {

            var root = $("#data-form");

            // 連續的圖片編碼
            var imgcode = '';

            // 選取發生改變
            this.change_file = function () {
                root.on("change", ".ImgFile", function () {
                    show(this);
                });
            }

            // 批次圖片，先清空後再插入
            var show = function (input) {
                if (input.files && input.files[0]) {
                    clean(input.ID);
                    each_img(input.files, input.id);
                }
            }

            // 批次讀取，最後再一次寫入
            var each_img = function (files, ID) {

                $.each(files, function (index, file) {
                    var src = URL.createObjectURL(file);
                    create_imgcode(src);
                });

                // 放置預覽元素後重設
                root.find("#" + ID + "preview").html(imgcode);
                reset();
            }


            // 建立圖片
            var create_imgcode = function (src) {
                imgcode += '<a class="aimg" href="' + src + '" data-lightbox="roadtrip"><img class="img" src="' + src + '" /></a>';
            }


            // 清空預覽區域
            var clean = function (ID) {
                root.find("#" + ID + "preview").empty();
            }

            // 還原 input[type=file]
            var reset = function () {
                imgcode = '';
                //root.find("#VendorInvoice").val(null);
            }
        }
        // 執行
        Preview.change_file();
    </script>
}
