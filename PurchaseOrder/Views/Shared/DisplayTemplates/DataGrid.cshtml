@model DataGridModels
@{
    var optionType = String.Join(",", Model.DataGridItems.Where(x => !string.IsNullOrWhiteSpace(x.columnsType) && (x.columnsType== "select"|| x.columnsType == "OptionVal")).Select(x => "'" + x.field + "DDL'"));
}
<style>
    .DetailTable {
       width:100%;
    }
</style>
<script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
<script src="~/scripts/datagrid-detailview.js"></script>
<script src="~/scripts/jquery.number.min.js"></script>
<script type="text/javascript">
    var pager, pageSize = 100, selectOption;
    var $table = $("@Model.DataGridName"), datagrid;
    $(function () {
        var data = { optionType: [@Html.Raw(optionType)] };
        website.AjaxUrl("@Url.Action("GetSelectOption")", 'post', data).done(function (response) {
            if (response.status) {
                selectOption = response.data;
                dataInit();
            } else {
                alert(response.message);
            }
        });
    });

    function dataInit() {
        datagrid = new Datagrid("@Model.title", "@Model.idField", "@(Url.Action("GetData",new { Type = "Master" }))");
        datagrid.dataInit.frozenColumns = [[
        @if (Model.checkbox)
        {
            @:{ field: "ck", checkbox: true },
        }
        @foreach (var item in Model.DataGridItems.Where(x => x.frozen == true))
        {
            if (Model.saveitem && Model.edititem)
            {
                @:{ field: "@item.field", title: "@item.title", width: @item.width, align: "@item.align", sortable: @item.sortable },
            }
            else
            {
              @:{
              @:    field: "@item.field", title: "@item.title", width: @item.width, align: "@item.align", sortable: @item.sortable , formatter: function (value, row, index) {
              @:        if (website.IsEmpty(row.IsFilter))
              @:        {
              @:            return "<a  href='@Url.Action("EditItem")?ID=" + row.ID + "' >" + row.ID+"</a>";
              @:        }
              @:        else
              @:        {
              @:            return value;
              @:        }
              @:    }
              @:},
            }

        }
        ]];

        datagrid.dataInit.columns = [[
        @foreach (var item in Model.DataGridItems.Where(x => x.frozen == false))
        {
          @:{
            @:field: "@item.field", title: "@item.title", width: @item.width, align: "@item.align", sortable: @item.sortable,
            if (item.formatter)
            {
                if (item.columnsType == "select")
                {
                    if (Model.saveitem && Model.edititem)
                    {
                        @:formatter: function (value, row, index) { return website.IsEmpty(row.IsFilter) ? datagrid.setDropdown(row.ID, this.field, selectOption['@(item.field + "DDL")'], value) : value; }
                    }
                    else
                    {
                        @:formatter: function (value, row, index) { return website.IsEmpty(row.IsFilter) ? datagrid.setDropdownDisabled(row.ID, this.field, selectOption['@(item.field + "DDL")'], value) : value; }
                    }
                }
                else
                {
                    @:formatter: function (value, row, index) { return website.IsEmpty(row.IsFilter) ? datagrid.setInputText(row.ID, this.field, value) : value; },
                }
            }
            @:},
        }

        @if (Model.saveitem)
        {

            @:{
            @:    field: "Save", title: "Save", width: 90, align: "center", sortable: false,
            @:        formatter: function (value, row, index) {
            @:        if (website.IsEmpty(row.IsFilter)) {
            @:            return "<button type='button' class='btn btn-default btn-sm' id='btn-save' onclick='SaveData(" + row.ID + ")' disabled>SAVE</button>";
            @:        } else {
            @:            return value;
            @:        }
            @:    }
            @:},
        }

            @if (Model.additem)
            {
              @:{
              @:    field: "Add", title: "Add", width: 90, align: "center", sortable: false, formatter: function (value, row, index) {
              @:        if (website.IsEmpty(row.IsFilter))
              @:        {
              @:            return "<a class='btn btn-default btn-sm' id='btn-Add' href='@Url.Action("CreateItem")?ID=" + row.ID + "' >Add</a>";
              @:        }
              @:        else
              @:        {
              @:            return value;
              @:        }
              @:    }
              @:},
            }
            @if (Model.edititem)
            {
              @:{
              @:    field: "Edit", title: "Edit", width: 90, align: "center", sortable: false, formatter: function (value, row, index) {
              @:        if (website.IsEmpty(row.IsFilter))
              @:        {
              @:            return "<a class='btn btn-default btn-sm' id='btn-Add' href='@Url.Action("EditItem")?ID=" + row.ID + "' >Edit</a>";
              @:        }
              @:        else
              @:        {
              @:            return value;
              @:        }
              @:    }
              @:},
            }
        ]];

        @if (Model.showchilds)
        {
            @:datagrid.dataInit.view = detailview;
            @:datagrid.dataInit.detailFormatter = function (index, row) { return '<div class="itemList"></div>'; };
            @:datagrid.dataInit.onExpandRow = function (index, row)
            @:{
            @:    if (row.ItemCount == 1) {
            @:        $(this).datagrid("collapseRow", index);
            @:    } else {
            @:        var $itemList = $("div.itemList:eq(" + index + ")");
            @:        $itemList.panel({
            @:            border: false,
            @:            cache: false,
            @:            href: "@Url.Action("GetData", new { Type = "Detail"})&DetailID=" + row.ID,
            @:            onLoad: function (response) {
            @:                $("#datagrid-row-r1-1-" + index).next("tr").find(".datagrid-row-detail").html($itemList.find("table:hidden").remove().removeClass("hidden"));
            @:            }
            @:        });
            @:        $(this).datagrid('fixDetailRowHeight', index);
            @:    }
            @:};
        }
        $table.datagrid(datagrid.dataInit);

        pager = $table.datagrid("getPager");
        $(pager).pagination({
            pageSize: pageSize,
            showPageList: true,
            pageList: [100, 200, 300, 500],
            beforePageTest: "第",
            afterPageTest: "頁，共 {pages} 頁",
            displayMsg: "顯示 {from} 到 {to} 筆資料，共 {total} 筆資料"
        });
        $table.datagrid('uncheckAll');

        $(".datagrid-row").find("select").prop("disabled", "disabled");
    }
    function GetOptionVal(selectOption, value) {
        var val = value;
        $.each(selectOption, function () {
            if (this.value === value) {
                val= this.text;
            }
            return val;
        });

    }
        function getFilterData() {
            return {
                 @foreach (var item in Model.DataGridItems)
                 {
                     @:  @item.field: $('.filterColumn .s-@item.field').val(),
                 }
            };
        }

        function setFilterColumn(filterValue) {
            return {
                IsFilter: true,
                @foreach (var item in Model.DataGridItems)
                {
                    if (item.columnsType == "select")
                    {
                        @:@item.field: "<select class='form-control s-@item.field'><option value=''>全部</option>" + datagrid.setSelectOption(selectOption['@(item.field+"DDL")'], filterValue['@item.field']) + "</select>",
                    }
                    else
                    {
                        @:@item.field: "<input type='text' class='form-control s-@item.field' value='" + (!website.IsEmpty(filterValue['@item.field']) ? filterValue['@item.field'] : '') + "'>",
                    }
                }
                Save: "<button type='button' class='btn btn-default btn-sm' onclick='SaveData()'>SAVE ALL</button>",
            };
        }

        function onDataChange(ID) {
            var index = $table.datagrid("getRowIndex", ID) - 1;

            $table.datagrid('checkRow', index + 1);
            $("button#btn-save:eq(" + index + ")").removeAttr("disabled");
        }

        function SaveData(ID) {
            var dataList = [];

            if (website.IsEmpty(ID)) {
                var rows = $table.datagrid('getSelections');
                for (var i in rows) {
                    index = $table.datagrid('getRowIndex', rows[i].ID) - 1;
                    if (!$("button#btn-save:eq(" + index + ")").is("[disabled]")) {
                        dataList.push(setData(rows[i], index));
                        $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
                    }
                }
            } else {
                var index = $table.datagrid("getRowIndex", ID) - 1;
                row = $table.datagrid("getRows")[index + 1];
                dataList.push(setData(row, index));
                $("button#btn-save:eq(" + index + ")").attr("disabled", "disabled");
            }

            if (dataList.length > 0) {
                dataList.forEach(function (data) {
                    $.ajax({
                        url: "@Url.Action("Update")",
                        type: "post",
                        data: data,
                        dataType: "json"
                    });
                });

                alert('Success!');
            };

            $table.datagrid('uncheckAll');
        }
    function setData(row, index) {
            return {
                @foreach (var item in Model.DataGridItems){
                 if (item.columnsType == "select")
                 {
                        @: @item.field: $("select#@item.field:eq(" + index + ")").val(),
                 }
                 else if (item.columnsType == "input")
                 {
                        @: @item.field: $("input#@item.field:eq(" + index + ")").val(),
                 }
                 else
                 {
                        @: @item.field: row.@item.field,
                 }
                 }
            };
        }
</script>
