@model Orders
@section styles{
    <style>
        .table > tbody > tr > td {
            padding: 6px 6px;
        }

        .font-title {
            font-size: 16px !important;
            font-weight: 900 !important;
        }

            .font-title th {
                background-color: #909090 !important;
                color: #fff !important;
            }

        .font-bg {
            background-color: #2196f3 !important;
            color: #fff !important;
        }


        #list-package > div + div {
            margin-top: 25px;
        }

        #list-package > div:not(.edit) .text span + input, #list-package > div:not(.edit) .text div + input, #list-package > div:not(.edit) .text span + select, #list-package > div:not(.edit) button.save {
            display: none;
        }

        #list-package > div.edit .text {
            padding: 0px;
        }

            #list-package > div.edit .text input, #list-package > div.edit .text select {
                border-color: red;
            }

            #list-package > div.edit .text span, #list-package > div.edit button.edit {
                display: none;
            }
    </style>
}
@{
    TimeZoneConvert TimeZoneConvert = new TimeZoneConvert();
}
<div id="content">
    @if (TempData["ErrorMsg"] != null)
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="alert alert-danger fade in">
                    <button class="close" data-dismiss="alert">×</button>
                    <i class="fa-fw fa fa-times"></i>
                    @TempData["ErrorMsg"].ToString()
                </div>
            </div>
        </div>
    }

    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12">
                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false" data-widget-sortable="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2>編輯</h2>
                        <ul class="nav nav-tabs pull-right">
                            <li><a data-toggle="tab" href="#hb1">訂單資料</a></li>
                        </ul>
                    </header>

                    <div>
                        <div class="widget-body no-padding">
                            <form id="data-form" class="form-horizontal" action="@Url.Action("Edit", "Order", new { id = Model.ID })" method="post" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()

                                <div id="content" class="tab-content">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="tab-pane" id="hb1">
                                        <fieldset>
                                            <legend>
                                                Order #：@Model.ID
                                                <input type="hidden" name="ID" value="@Model.ID" />
                                            </legend>

                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-group" style="width:1320px;margin:0 auto;">
                                                        <div class="col-sm-3" style="position:relative">
                                                            <table class="table table-bordered" style="width:300px;">
                                                                <thead>
                                                                    <tr class="font-title">
                                                                        <th class="text-center" colspan="2">Order Summary</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr class="@(Model.OrderStatus.Equals((byte)EnumData.OrderStatus.OnHold) ? "bg-danger" : "")">
                                                                        <td width="132">Order Status：</td>
                                                                        <td class="no-padding">
                                                                            @{
                                                                                bool isReadOnly = !MyHelps.CheckPageAuth("OrderEdit", "OrderStatus", Session) || (!Model.OrderStatus.Equals((byte)EnumData.OrderStatus.InProcess) && !Model.OrderStatus.Equals((byte)EnumData.OrderStatus.OnHold));
                                                                                bool isChooseComplete = (Model.PaymentStatus.Equals((byte)EnumData.OrderPaymentStatus.Full) || Model.PaymentStatus.Equals((byte)EnumData.OrderPaymentStatus.OverPaid))
                                                                                    && (Model.FulfillmentStatus.Equals((byte)EnumData.OrderFulfillmentStatus.Full) || Model.FulfillmentStatus.Equals((byte)EnumData.OrderFulfillmentStatus.Partial));
                                                                            }
                                                                            <select class="form-control input-sm" name="OrderStatus" id="select-status" @(isReadOnly ? "disabled" : "")>
                                                                                @foreach (var status in EnumData.OrderStatusList())
                                                                                {
                                                                                    if (!(Model.OrderStatus.Equals((byte)EnumData.OrderStatus.OnHold) && status.Key.Equals((byte)EnumData.OrderStatus.Completed)))
                                                                                    {
                                                                                        if (!(status.Key.Equals((byte)EnumData.OrderStatus.Completed) && !isChooseComplete))
                                                                                        {
                                                                                            <option value="@status.Key" @(status.Key.Equals(Model.OrderStatus) ? "selected" : "")>@status.Value</option>
                                                                                        }
                                                                                    };
                                                                                }
                                                                            </select>
                                                                            <input type="hidden" name="OrderStatus" value="@Model.OrderStatus" />
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Order Date：</td>
                                                                        <td>@TimeZoneConvert.DateTimeToString(Model.OrderDate, EnumData.TimeZone.UTC, EnumData.TimeZone.TST)</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Order Type：</td>
                                                                        <td>@EnumData.OrderTypeList()[Model.OrderType]</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Rush Order：</td>
                                                                        <td class="no-padding">
                                                                            @{ 
                                                                                object Enabled = new { @class = "form-control sm" };
                                                                                object Disabled = new { @class = "form-control sm", @disabled = "" };
                                                                            }
                                                                            @Html.DropDownListFor(Model => Model.IsRush, Enum.GetValues(typeof(EnumData.YesNo)).Cast<EnumData.YesNo>().Select(s => new SelectListItem() { Text = s.ToString(), Value = (byte)s == 1 ? bool.TrueString : bool.FalseString }), htmlAttributes: MyHelps.CheckPageAuth("OrderEdit", "RushOrder", Session) ? Enabled : Disabled)
                                                                            <input type="hidden" name="IsRush" value="@Model.IsRush" />
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Payment Status：</td>
                                                                        <td>@EnumData.OrderPaymentStatusList()[Model.PaymentStatus]</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Payment Date：</td>
                                                                        <td>@TimeZoneConvert.DateTimeToString(Model.PaymentDate, EnumData.TimeZone.UTC, EnumData.TimeZone.TST)</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Fulfillment Status：</td>
                                                                        <td>@EnumData.OrderFulfillmentStatusList()[Model.FulfillmentStatus]</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Fulfillment Date：</td>
                                                                        <td>@TimeZoneConvert.DateTimeToString(Model.FulfilledDate, EnumData.TimeZone.UTC, EnumData.TimeZone.TST)</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>Warehouse：</td>
                                                                        <td>@Model.Packages.First(p => p.IsEnable).GetWarehouse.Name</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>RMA #：</td>
                                                                        <td class="@(!Model.RMAID.HasValue ? "no-padding" : "")">
                                                                            @if (Model.RMAID.HasValue)
                                                                            {
                                                                                <a href="http://internal.qd.com.tw:8080/RMA/Edit/@Model.RMAID" target="_blank">@Model.RMAID</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                if (MyHelps.CheckPageAuth("OrderEdit", "CreateRMA", Session))
                                                                                {
                                                                                    <a class="btn btn-default btn-sm" href="@Url.Action("Create", "RMA", new { QDOrderID = Model.ID, OrderID = Model.SCID })" target="_blank">Create</a>
                                                                                }
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>

                                                            <table class="table" style="width:600px;position:absolute;bottom:-140px;left:15px;">
                                                                <tr>
                                                                    <td width="152" style="border:0px;">Customer User ID：</td>
                                                                    <td style="border:0px;">
                                                                        @if (!string.IsNullOrEmpty(Model.CustomerID))
                                                                        {
                                                                            <a href='http://feedback.ebay.com/ws/eBayISAPI.dll?ViewFeedback2&UserID=@Model.CustomerID' target='_blank'>@Model.CustomerID</a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td style="border:0px;">Customer User Email：</td>
                                                                    <td style="border:0px;">@Model.CustomerEmail</td>
                                                                </tr>
                                                            </table>
                                                        </div>

                                                        <div class="col-sm-4" style="width:375px;">
                                                            <table class="table table-bordered" style="margin: 30px auto;">
                                                                <tr>
                                                                    <td width="120">Company：</td>
                                                                    <td>@Model.GetCompany.Name</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Channel：</td>
                                                                    <td>@EnumData.OrderChannelList()[Model.Channel]</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Source Order #：</td>
                                                                    <td>@Model.OrderSourceID</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>SC Order #：</td>
                                                                    <td>
                                                                        @if (Model.SCID.HasValue)
                                                                        {
                                                                            <a href='https://dm.cwa.sellercloud.com/Orders/Orders_details.aspx?id=@Model.SCID' target='_blank'>@Model.SCID</a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                            </table>

                                                            <div class="col-sm-6 no-padding">
                                                                <table class="table table-bordered text-center">
                                                                    <thead>
                                                                        <tr class="font-title">
                                                                            <th class="text-center" style="font-size:12px;" colspan="2">Sold To</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr>
                                                                            <td colspan="2" rowspan="9" class="no-padding">
                                                                                @{
                                                                                    var SoldAddress = Model.Addresses.FirstOrDefault(a => a.Type.Equals((byte)EnumData.OrderAddressType.Sold));
                                                                                    var SoldArray = new string[] { SoldAddress?.AddressLine1, SoldAddress?.AddressLine2, SoldAddress?.City, SoldAddress?.State, SoldAddress?.Postcode, SoldAddress?.CountryName, SoldAddress?.PhoneNumber };
                                                                                    var SoldTo = new string[] { string.Format("{0}, {1}", SoldAddress?.FirstName, SoldAddress?.LastName), string.Join("\r\n", SoldArray.Except(new string[] { "", null })) };
                                                                                }
                                                                                <textarea class="form-control" style="resize:none;font-size:14px;" rows="8" readonly>@string.Join("\r\n", SoldTo)</textarea>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </div>

                                                            <div class="col-sm-6 no-padding">
                                                                <table class="table table-bordered">
                                                                    <thead>
                                                                        <tr class="font-title">
                                                                            <th class="text-center" style="font-size:12px;" colspan="2">
                                                                                Ship To
                                                                                @if (MyHelps.CheckPageAuth("OrderEdit", "EditAddress", Session))
                                                                                {
                                                                                    <div style="position: absolute;top: 1px;right: 1px;">
                                                                                        <button type="button" class="btn btn-default btn-sm" onclick="$addressDialog.dialog('open');">Edit</button>
                                                                                    </div>
                                                                                }
                                                                            </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr>
                                                                            <td colspan="2" rowspan="9" class="no-padding">
                                                                                @{
                                                                                    var ShipAddress = Model.Addresses.FirstOrDefault(a => a.Type.Equals((byte)EnumData.OrderAddressType.Shipped));
                                                                                    var ShipsArray = new string[] { ShipAddress?.AddressLine1, ShipAddress?.AddressLine2, ShipAddress?.City, ShipAddress?.State, ShipAddress?.Postcode, ShipAddress?.CountryName, ShipAddress?.PhoneNumber };
                                                                                    var ShipTo = new string[] { string.Format("{0}, {1}", ShipAddress?.FirstName, ShipAddress?.LastName), string.Join("\r\n", ShipsArray.Except(new string[] { "", null })) };
                                                                                }
                                                                                <textarea class="form-control" id="area-ship" style="resize:none;font-size:14px;" rows="8" readonly>@string.Join("\r\n", ShipTo)</textarea>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>

                                                        <div class="col-sm-3" style="width:310px;">
                                                            @{
                                                                var payment = Model.Payments.OrderByDescending(p => p.Date).FirstOrDefault(p => p.IsEnable);
                                                            }
                                                            <table class="table table-bordered">
                                                                <thead>
                                                                    <tr class="font-title">
                                                                        <th class="text-center" colspan="2">
                                                                            Payment
                                                                            @if (MyHelps.CheckPageAuth("OrderEdit", "EditPayment", Session))
                                                                            {
                                                                                <div style="position: absolute;top: 2px;right: 15px;">
                                                                                    <button type="button" class="btn btn-default" onclick="$paymentDialog.dialog('open');">Edit</button>
                                                                                </div>
                                                                            }
                                                                        </th>
                                                                    </tr>
                                                                </thead>
                                                                <tr>
                                                                    <td width="126">Status：</td>
                                                                    <td>@Enum.GetName(typeof(EnumData.PaymentStatus), payment?.Status ?? 2)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Date：</td>
                                                                    <td>@TimeZoneConvert.DateTimeToString(payment?.Date, EnumData.TimeZone.UTC, EnumData.TimeZone.TST)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Gateway：</td>
                                                                    <td>@(payment != null ? Enum.GetName(typeof(PurchaseOrderSys.SCService.PaymentMethod), payment.Gateway) : "")</td>
                                                                </tr>
                                                                <tr class="font-title text-center">
                                                                    <th class="text-center" colspan="2">Statement</th>
                                                                </tr>
                                                                <tr>
                                                                    <td>Total Value：</td>
                                                                    <td>@(payment?.TotalValue)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Shipping：</td>
                                                                    <td>@(payment?.ShippingCharge)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Insurance：</td>
                                                                    <td>@(payment?.InsuranceCharge)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Grand Total：</td>
                                                                    <td>$@(payment?.GrandTotal) @Model.Packages.First(p => p.IsEnable).GetCurrency.Code</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Payment Total：</td>
                                                                    <td>@(payment?.PaymentTotal)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Refund：</td>
                                                                    <td>@(payment?.Refund)</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Balance：</td>
                                                                    <td>@(payment?.Balance)</td>
                                                                </tr>
                                                                <tr class="font-title text-center">
                                                                    <th class="text-center" colspan="2">Other Details</th>
                                                                </tr>
                                                                <tr>
                                                                    <td>Transaction ID #：</td>
                                                                    <td>
                                                                        @if (payment != null)
                                                                        {
                                                                            if (payment.Gateway.Equals((int)PurchaseOrderSys.SCService.PaymentMethod.PayPal))
                                                                            {
                                                                                <a href="https://www.paypal.com/activity/payment/@(payment?.TransactionID)" target="_blank">@(payment?.TransactionID)</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                @(payment?.TransactionID)
                                                                            }
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>Payment Email：</td>
                                                                    <td>@(payment?.PaymentEmail)</td>
                                                                </tr>
                                                            </table>
                                                        </div>

                                                        <div class="col-sm-2" style="width:305px;">
                                                            <table class="table table-bordered">
                                                                <thead>
                                                                    <tr class="font-title">
                                                                        <th class="text-center">Logs</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td class="no-padding">
                                                                            @{
                                                                                var ActionLogs = Model.ActionLogs.OrderBy(l => l.CreateAt)
                                                                                    .Select(l => string.Format("{0} > {1}\r\n{2}\r\n{3}", l.Item, l.Description, l.CreateBy, TimeZoneConvert.InitDateTime(l.CreateAt, EnumData.TimeZone.UTC).ConvertDateTime(EnumData.TimeZone.TST).ToString("yyyy/MM/dd hh:mm tt"))).ToList();
                                                                            }
                                                                            <textarea class="form-control" rows="25" readonly>@(ActionLogs.Any() ? string.Join("\r\n┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄\r\n", ActionLogs) : "")</textarea>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                    <div class="form-group" style="width:1320px; height:25px;margin:0 auto;position:relative">
                                                        <div class="col-sm-12" style="width:350px;position:absolute;right:5px;">
                                                            <div class="input-group">
                                                                <span class="input-group-addon font-bg">Shipping Actions</span>
                                                                <select class="form-control" id="select-action" @(!MyHelps.CheckPageAuth("OrderEdit", "ShippingAction", Session) ? "disabled" : "")>
                                                                    <option value="">Select Action</option>
                                                                    @if (Model.OrderStatus.Equals((byte)EnumData.OrderStatus.InProcess))
                                                                    {
                                                                        <optgroup label="Normal">
                                                                            <option value="1">Split package</option>
                                                                            <option value="2">Split carrier box</option>
                                                                            <option value="3">Combine</option>
                                                                        </optgroup>
                                                                    }
                                                                    <option value="4">Cancel Dispatch</option>
                                                                    @*<optgroup label="Shipped">
                                                                            <option value="5">Create RMA</option>
                                                                            <option value="6">Create Replacement</option>
                                                                        </optgroup>*@
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <hr />
                                                    <div class="form-group" id="list-package" style="width:1320px;margin:0 auto;">
                                                        @{
                                                            int index = 1;
                                                            var ViewData = new ViewDataDictionary() { { "total", Model.Packages.Count(p => p.IsEnable) }, { "MethodList", ViewBag.MethodList }, { "WarehouseList", ViewBag.WarehouseList }, { "CurrencyList", ViewBag.CurrencyList } };

                                                            foreach (var package in Model.Packages.Where(p => p.IsEnable))
                                                            {
                                                                ViewData["index"] = index++;
                                                                Html.RenderPartial("_PackageDetail", package, ViewData);
                                                            }
                                                        }
                                                    </div>
                                                    <hr />
                                                    <div class="form-group" style="width:1320px;margin:0 auto;">
                                                        <div class="col-sm-4">
                                                            <table class="table table-bordered">
                                                                <thead>
                                                                    <tr class="font-title">
                                                                        <th>Buyer Note</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td class="no-padding">
                                                                            <textarea class="form-control" style="font-size:16px;" rows="8" readonly>@Model.BuyerNote</textarea>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                        <div class="col-sm-8">
                                                            <table class="table table-bordered">
                                                                <thead>
                                                                    <tr class="font-title">
                                                                        <th>Comment</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td class="no-padding">
                                                                            <textarea class="form-control" id="text-comment" name="Comment" style="font-size:16px;" rows="8" readonly>@Model.Comment</textarea>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                                <tfoot>
                                                                    <tr>
                                                                        <td class="no-padding">
                                                                            <div class="input-group">
                                                                                <input type="text" class="form-control" />
                                                                                <div class="input-group-btn">
                                                                                    <button type="button" class="btn btn-default" onclick="CommentAdd($(this).parent('div').siblings('input'));">Add</button>
                                                                                </div>
                                                                            </div>
                                                                        </td>
                                                                    </tr>
                                                                </tfoot>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>

                                <div class="widget-footer">
                                    <button type="submit" class="btn btn-primary" id="btn-save">儲存</button>
                                    @*<button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index", "SkuType")'">返回</button>*@
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<div class="hidden">
    <div id="dialog-address" class="easyui-dialog" title="Edit Address" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false" style="width:400px;">
        <div data-options="region:'center'">
            <table class="table table-bordered">
                <tbody id="edit-address">
                    <tr>
                        <td width="123">First Name：</td>
                        <td class="no-padding">
                            <input type="hidden" name="ID" value="@(ShipAddress?.ID)" data-reset="@(ShipAddress?.ID)" />
                            <input type="text" class="form-control" name="FirstName" value="@(ShipAddress?.FirstName)" data-reset="@(ShipAddress?.FirstName)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Last Name：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="LastName" value="@(ShipAddress?.LastName)" data-reset="@(ShipAddress?.LastName)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Address Line 1：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="AddressLine1" value="@(ShipAddress?.AddressLine1)" data-reset="@(ShipAddress?.AddressLine1)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Address Line 2：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="AddressLine2" value="@(ShipAddress?.AddressLine2)" data-reset="@(ShipAddress?.AddressLine2)" />
                        </td>
                    </tr>
                    <tr>
                        <td>City：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="City" value="@(ShipAddress?.City)" data-reset="@(ShipAddress?.City)" />
                        </td>
                    </tr>
                    <tr>
                        <td>State：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="State" value="@(ShipAddress?.State)" data-reset="@(ShipAddress?.State)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Postcode：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="Postcode" value="@(ShipAddress?.Postcode)" data-reset="@(ShipAddress?.Postcode)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Country：</td>
                        <td class="no-padding">
                            @Html.DropDownList("CountryCode", EnumData.CountryList().Select(c => new SelectListItem() { Text = c.Value, Value = c.Key, Selected = c.Key.Equals(ShipAddress?.CountryCode.ToUpper()) }).ToList(), htmlAttributes: new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td>PhoneNumber：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="PhoneNumber" value="@(ShipAddress?.PhoneNumber)" data-reset="@(ShipAddress?.PhoneNumber)" />
                        </td>
                    </tr>
                    <tr>
                        <td style="padding:3px;" colspan="2">
                            <button type="button" class="btn btn-default" onclick="$('#edit-address').find('input').each(function (i, input) { $(input).val($(input).data('reset'));});">Reset</button>
                            <button type="button" class="btn btn-default" onclick="AddressSave();">Save</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div id="dialog-payment" class="easyui-dialog" title="Edit Payment" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false" style="width:400px;">
        <div data-options="region:'center'">
            <table class="table table-bordered">
                <tbody id="edit-payment">
                    <tr>
                        <td width="126">Status：</td>
                        <td class="no-padding">
                            <input type="hidden" name="ID" value="@(payment?.ID)" data-reset="@(payment?.ID)" />
                            @Html.DropDownList("Status", Enum.GetValues(typeof(EnumData.PaymentStatus)).Cast<EnumData.PaymentStatus>().Select(s => new SelectListItem() { Text = s.ToString(), Value = ((byte)s).ToString(), Selected = ((byte)s).Equals(payment?.Status ?? 2) }).ToList(), htmlAttributes: new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td>Date：</td>
                        <td class="no-padding">
                            @{
                                var paymentDate = payment != null ? TimeZoneConvert.DateTimeToString(payment?.Date, EnumData.TimeZone.UTC, EnumData.TimeZone.TST) : "";
                            }
                            <input type="text" class="form-control" name="Date" value="@paymentDate" data-reset="@paymentDate" />
                        </td>
                    </tr>
                    <tr>
                        <td>Gateway：</td>
                        <td class="no-padding">
                            @Html.DropDownList("Gateway", Enum.GetValues(typeof(PurchaseOrderSys.SCService.PaymentMethod)).Cast<PurchaseOrderSys.SCService.PaymentMethod>().Select(g => new SelectListItem() { Text = g.ToString(), Value = ((int)g).ToString(), Selected = ((int)g).Equals(payment?.Gateway ?? 5) }).ToList(), htmlAttributes: new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td>Shipping：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="ShippingCharge" value="@(payment?.ShippingCharge ?? 0)" data-reset="@(payment?.ShippingCharge ?? 0)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Insurance：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="InsuranceCharge" value="@(payment?.InsuranceCharge ?? 0)" data-reset="@(payment?.InsuranceCharge ?? 0)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Payment Total：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="PaymentTotal" value="@(payment?.PaymentTotal ?? 0)" data-reset="@(payment?.PaymentTotal ?? 0)" />
                        </td>
                    </tr>
                    <tr>
                        <td>Refund：</td>
                        <td class="no-padding">
                            <input type="text" class="form-control" name="Refund" value="@(payment?.Refund ?? 0)" data-reset="@(payment?.Refund ?? 0)" />
                        </td>
                    </tr>
                    <tr>
                        <td style="padding:3px;" colspan="2">
                            <button type="button" class="btn btn-default" onclick="$('#edit-payment').find('input').each(function (i, input) { $(input).val($(input).data('reset'));});">Reset</button>
                            <button type="button" class="btn btn-default" onclick="PaymentSave();">Save</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div id="dialog-splitQty" class="easyui-dialog" title="Split Package" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false,onBeforeClose:function(){return SplitPackage.CloseCheck();}" style="width:400px;">
        <div data-options="region:'center'">
            <table class="table table-bordered text-right">
                <tr>
                    <td width="200">Packages to split</td>
                    <td class="no-padding">
                        <input type="number" class="form-control" id="input-qty" value="2" min="2" />
                    </td>
                </tr>
                <tr>
                    <td style="padding:3px;" colspan="2">
                        <button class="btn btn-default btn-sm" onclick="$splitQtyDialog.dialog('close');">Close</button>
                        <button class="btn btn-default btn-sm" id="btn-next">Next</button>
                    </td>
                </tr>
            </table>
        </div>
        <div data-options="region:'bottom'">
            <div style="position: relative;">
                <span class="text-danger" style=" position: absolute;top:-17px;right:5px;">WARNING: More then TWO trackings will be created!</span>
            </div>
        </div>
    </div>
    <div id="dialog-package" class="easyui-dialog" title="" data-options="iconCls:'icon-edit',closed:true,draggable:false,resizable:false,onBeforeClose:function(){return SplitPackage.CloseCheck();}" style="width:1000px;top:300px;padding:5px;"></div>
</div>
@section pagespecific {
    <script src="~/scripts/jquery.easyui-1.4.3.min.js"></script>
    <script type="text/javascript">
        var hash = window.location.hash;
        $('ul.nav-tabs li').eq(hash.substr(1)).addClass('active');
        $('.tab-pane').eq(hash.substr(1)).addClass('active');

        var pageUrl = $('#data-form').attr('action');
        var $statusSelect = $('#select-status'), $actionSelect = $('#select-action'), $packageList = $('#list-package');
        var $addressDialog = $('#dialog-address'), $paymentDialog = $('#dialog-payment'), $splitQtyDialog = $('#dialog-splitQty'), $packageDialog = $('#dialog-package');

        $(document).ready(function () {
            $('[rel="popover"]').popover();

            $statusSelect.change(function () {
                var option = $(this).find('option:selected').text();
                var msg = 'The Order status is about to be changed to ' + option + '. Do you wish to continue?';
                if ($(this).val() == '2' || $(this).val() == '3') {
                    msg += '\n\r WARNING: This process cannot be undone!';
                }

                if (confirm(msg)) {
                    $('#btn-save').trigger('click');
                } else {
                    $(this).val('@Model.OrderStatus');
                }
            });

            $actionSelect.change(function () {
                OrderAction.SelectAction($(this).val());
            });
        });

        var AddressSave = function () {
            var data = $('#edit-address').find('input, select').serializeArray();

            website.AjaxUrl('../AddressSave', 'post', data).done(function (response) {
                if (response.status) {
                    alert('Update success!');

                    $('#area-ship').val(response.data);
                } else {
                    alert(response.message);
                }

                $addressDialog.dialog('close');
            });
        };

        var PaymentSave = function () {
            var data = $('#edit-payment').find('input, select').serializeArray();

            website.AjaxUrl('../PaymentSave', 'post', data).done(function (response) {
                if (response.status) {
                    alert('Update success!');
                } else {
                    alert(response.message);
                }

                location.href = pageUrl;
            });
        };

        var PackageEdit = function (ID) {
            $packageList.children("div").each(function () {
                if ($(this).data('package') == ID) {
                    return $(this).addClass('edit');
                }
            });
        };

        var PackageReset = function (ID) {
            $packageList.children("div").each(function () {
                if ($(this).data('package') == ID) {
                    var $package = $(this);

                    return $.ajax('../PackageContent?PackageID=' + ID).done(function (response) {
                        console.log(response);
                        $package.after(response).remove();
                    });
                }
            });
        }

        var PackageSave = function (ID) {
            $packageList.children("div").each(function () {
                if ($(this).data('package') == ID) {
                    var $package = $(this);
                    var data = $package.find('input, select').serializeArray();

                    return website.AjaxUrl('../PackageSave', 'post', data).done(function (response) {
                        if (response.status) {
                            alert('Update success!');

                            return $package.after(response.data).remove();
                        } else {
                            return alert(response.message);
                        }
                    });
                }
            });
        };

        var PackageMarkShip = function (PackageID) {
            var $package = $packageList.find('div[data-package=' + PackageID + ']');
            var data = $package.find('input, select').serializeArray();

            website.AjaxUrl('../PackageSave', 'post', data).done(function (response) {
                if (response.status) {
                    website.AjaxUrl('../PackageMarkShip', 'post', { PackageID }).done(function (response) {
                        if (response.status) {
                            alert('Mark ship success!');

                            location.href = pageUrl;
                        } else {
                            return alert(response.message);
                        }
                    });
                } else {
                    return alert(response.message);
                }
            });

        };

        var CommentAdd = function (input) {
            var text = $(input).val();
            if (!website.IsEmpty(text)) {
                var comment = $('#text-comment').val().trim();
                $('#text-comment').val((website.IsEmpty(comment) ? text : comment + '\r\n' + text));
                $(input).val('');
            }
        };

        var OrderAction = function () {
            var CheckSelectedPackage = function (amount) {
                var checked = $packageList.children('div').filter(function (i, package) {
                    return $(package).find('input#chk-package').prop('checked');
                });

                if (checked.length == 0) return ErrorMsg('尚未選擇Package!');

                if (checked.length != amount) return ErrorMsg('需要選擇' + amount + '個Package!');

                return checked;
            };

            var SelectAction = function (type) {
                switch (type) {
                    case '1': //Split Package
                        var result = CheckSelectedPackage(1);
                        if (result) {
                            var $package = $(result[0]);

                            if ($package.data('qty') == '1') return ErrorMsg('產品總數不足!');

                            SplitPackage.Init($package.data('package'), parseInt($package.data('qty')));
                        }
                        break;
                    case '2':
                        break;
                    case '3': //Combine Package
                        var result = CheckSelectedPackage(2);
                        if (result) {
                            if ($(result[0]).find('#text-currency').text() != $(result[1]).find('#text-currency').text()) {
                                return ErrorMsg('Currency must be the same when combining packages.');
                            }

                            var IDs = [];
                            result.each(function (i, p) { IDs.push($(p).data('package')); })
                            CombinePackage.Init(IDs);
                        }
                        break;
                    case '4':
                        break;
                    default:
                        return false;
                }

                $actionSelect.val('');
            };

            function ErrorMsg(msg) {
                alert(msg);
                return false;
            }

            return {
                SelectAction
            };
        }();

        var splitTableUrl = "@Url.Action("SplitTable", "Order")";
        var splitPackageUrl = "@Url.Action("SplitPackage", "Order")";
        var SplitPackage = function () {
            var packageID, splitMax;

            var SplitInit = function (ID, max) {
                packageID = ID;
                splitMax = max;

                $splitQtyDialog.dialog("open").find('input').val(2).attr('max', splitMax);
            }

            $splitQtyDialog.delegate('input', 'change', function () {
                var value = parseInt($(this).val());

                if (value == NaN || value < 2) $(this).val(2);

                if (value > splitMax) $(this).val(splitMax);
            });

            $splitQtyDialog.delegate('#btn-next', 'click', function () {
                var qty = $splitQtyDialog.find('input').val();

                $packageDialog.dialog({ title: $splitQtyDialog.dialog("options").title });
                $packageDialog.dialog("refresh", splitTableUrl + "?PackageID=" + packageID + "&Qty=" + qty).dialog("open");
                $splitQtyDialog.dialog('close');
            });

            $packageDialog.delegate('#split-summary #btn-next', 'click', function () {
                if (!confirm('This package will be split accordingly. Do you wish to continue?')) return false;

                var error = CheckTotalQty();

                $('#split-summary').find('tbody tr').each(function () {
                    if (!CheckSkuQty($(this).attr('rel'))) {
                        error.push('品號' + $(this).attr('rel') + ' - 總數不對!');
                    }
                });

                if (error.length != 0) return alert(error.join('\r\n'));

                var data = $packageDialog.find('input, select').serializeArray();
                website.AjaxUrl(splitPackageUrl + "?PackageID=" + packageID, 'post', data).done(function (response) {
                    if (response.status) {
                        alert('Split success!');
                    } else {
                        alert(response.message);
                    }
                    location.href = pageUrl;
                });
            });

            var CheckSkuQty = function (sku) {
                var $summary = $('#split-summary').find('tr[rel=' + sku + ']');
                var total = $summary.data('total');
                var subTotal = 0;

                $packageDialog.find('tr[rel=' + sku + ']').each(function () {
                    $(this).removeClass('bg-warning');
                    var qty = $(this).find('select').val();
                    if (qty != undefined) subTotal += parseInt(qty);
                });

                $summary.find('#subTotal').text(subTotal);

                if (parseInt(total) != subTotal) {
                    $packageDialog.find('tr[rel=' + sku + ']').each(function () {
                        $(this).addClass('bg-warning');
                    });

                    return false;
                }
                return true;
            };

            var CheckTotalQty = function () {
                var error = [];

                $packageDialog.find('table:not(#split-summary)').each(function () {
                    var $table = $(this);

                    if ($table.has('.bg-danger')) $table.removeClass('bg-danger');

                    if ($table.find('select').filter(function () { return $(this).val() != 0; }).length == 0) {
                        $table.addClass('bg-danger');
                        error.push($table.find('th').text().trim() + ' - 未選擇品號!');
                    }
                });

                return error;
            };

            var DialogClose = function () {
                if ($splitQtyDialog.parent('div').is(":hidden") || $packageDialog.parent('div').is(':hidden')) {
                    return confirm('All changes will be discarded. Do you wish to continue?');
                }
                return true;
            };

            return {
                Init: SplitInit,
                CloseCheck: DialogClose
            };
        }();

        var combineTableUrl = "@Url.Action("CombineTable", "Order")";
        var combinePackageUrl = "@Url.Action("CombinePackage", "Order")";
        var CombinePackage = function () {
            var CombineInit = function (IDs) {
                console.log(IDs);
                website.AjaxUrl(combineTableUrl, 'post', { PackageIDs: IDs }).done(function (response) {
                    if (response.status) {
                        $packageDialog.html(response.data).dialog({ title: 'Combine Package' });
                        $packageDialog.dialog("open");
                    } else {
                        alert(response.message);
                    }
                });
            };

            $packageDialog.delegate('#combine-summary #btn-next', 'click', function () {
                if (!confirm('This package will be split accordingly. Do you wish to continue?')) return false;

                var data = $packageDialog.find('input, select').serializeArray();
                website.AjaxUrl(combinePackageUrl, 'post', data).done(function (response) {
                    if (response.status) {
                        alert('Combine success!');
                    } else {
                        alert(response.message);
                    }
                    location.href = pageUrl;
                });
            });

            return {
                Init: CombineInit
            };
        }();
    </script>
}
