//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此原始程式碼由 xsd 版本=4.6.1055.0 自動產生。
// 
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace NetoDeveloper
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="NetoAPI", IsNullable=false)]
    public partial class GetItem {
        
        private GetItemFilter filterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetItemFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public partial class GetItemFilter {
        
        private string[] sKUField;
        
        private string[] accountingCodeField;
        
        private string[] inventoryIDField;
        
        private string parentSKUField;
        
        private string[] brandField;
        
        private string[] modelField;
        
        private string[] nameField;
        
        private string[] primarySupplierField;
        
        private bool[] approvedField;
        
        private GetItemFilterApprovedForPOS[] approvedForPOSField;
        
        private GetItemFilterApprovedForMobileStore[] approvedForMobileStoreField;
        
        private GetItemFilterSalesChannel[] salesChannelsField;
        
        private bool[] visibleField;
        
        private bool[] isActiveField;
        
        private System.DateTime? dateAddedFromField;
        
        private System.DateTime? dateAddedToField;
        
        private System.DateTime? dateUpdatedFromField;
        
        private System.DateTime? dateUpdatedToField;
        
        private string[] categoryIDField;
        
        private string priorityField;
        
        private int pageField;
        
        private int limitField;
        
        private GetItemFilterOrderBy orderByField;
        
        private bool orderByFieldSpecified;
        
        private GetItemFilterOrderDirection orderDirectionField;
        
        private bool orderDirectionFieldSpecified;
        
        private GetItemFilterOutputSelector[] outputSelectorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SKU", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccountingCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] AccountingCode {
            get {
                return this.accountingCodeField;
            }
            set {
                this.accountingCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InventoryID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string[] InventoryID {
            get {
                return this.inventoryIDField;
            }
            set {
                this.inventoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParentSKU {
            get {
                return this.parentSKUField;
            }
            set {
                this.parentSKUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Brand", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Model", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PrimarySupplier", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] PrimarySupplier {
            get {
                return this.primarySupplierField;
            }
            set {
                this.primarySupplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Approved", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool[] Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ApprovedForPOS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetItemFilterApprovedForPOS[] ApprovedForPOS {
            get {
                return this.approvedForPOSField;
            }
            set {
                this.approvedForPOSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ApprovedForMobileStore", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetItemFilterApprovedForMobileStore[] ApprovedForMobileStore {
            get {
                return this.approvedForMobileStoreField;
            }
            set {
                this.approvedForMobileStoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SalesChannel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public GetItemFilterSalesChannel[] SalesChannels {
            get {
                return this.salesChannelsField;
            }
            set {
                this.salesChannelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Visible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool[] Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IsActive", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool[] IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime? DateAddedFrom {
            get {
                return this.dateAddedFromField;
            }
            set {
                this.dateAddedFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime? DateAddedTo {
            get {
                return this.dateAddedToField;
            }
            set {
                this.dateAddedToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime? DateUpdatedFrom {
            get {
                return this.dateUpdatedFromField;
            }
            set {
                this.dateUpdatedFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime? DateUpdatedTo {
            get {
                return this.dateUpdatedToField;
            }
            set {
                this.dateUpdatedToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CategoryID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string[] CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public int Page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public int Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetItemFilterOrderBy OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderBySpecified {
            get {
                return this.orderByFieldSpecified;
            }
            set {
                this.orderByFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetItemFilterOrderDirection OrderDirection {
            get {
                return this.orderDirectionField;
            }
            set {
                this.orderDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderDirectionSpecified {
            get {
                return this.orderDirectionFieldSpecified;
            }
            set {
                this.orderDirectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OutputSelector", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetItemFilterOutputSelector[] OutputSelector {
            get {
                return this.outputSelectorField;
            }
            set {
                this.outputSelectorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public enum GetItemFilterApprovedForPOS {
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public enum GetItemFilterApprovedForMobileStore {
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public partial class GetItemFilterSalesChannel {
        
        private string salesChannelIDField;
        
        private bool isApprovedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string SalesChannelID {
            get {
                return this.salesChannelIDField;
            }
            set {
                this.salesChannelIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
    }

    /// <remarks/>
    [JsonConverter(typeof(StringEnumConverter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public enum GetItemFilterOrderBy {
        
        /// <remarks/>
        ParentSKU,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        Model,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        IsActive,
        
        /// <remarks/>
        DateAdded,
        
        /// <remarks/>
        DateUpdated,
    }

    /// <remarks/>
    [JsonConverter(typeof(StringEnumConverter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public enum GetItemFilterOrderDirection {
        
        /// <remarks/>
        ASC,
        
        /// <remarks/>
        DESC,
    }

    /// <remarks/>
    [JsonConverter(typeof(StringEnumConverter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="NetoAPI")]
    public enum GetItemFilterOutputSelector {
        
        /// <remarks/>
        ParentSKU,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        Brand,
        
        /// <remarks/>
        Model,
        
        /// <remarks/>
        Virtual,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        PrimarySupplier,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        IsActive,
        
        /// <remarks/>
        FreeGifts,
        
        /// <remarks/>
        CrossSellProducts,
        
        /// <remarks/>
        UpsellProducts,
        
        /// <remarks/>
        PriceGroups,
        
        /// <remarks/>
        ItemLength,
        
        /// <remarks/>
        ItemWidth,
        
        /// <remarks/>
        ItemHeight,
        
        /// <remarks/>
        ShippingLength,
        
        /// <remarks/>
        ShippingWidth,
        
        /// <remarks/>
        ShippingHeight,
        
        /// <remarks/>
        ShippingWeight,
        
        /// <remarks/>
        CubicWeight,
        
        /// <remarks/>
        WarehouseQuantity,
        
        /// <remarks/>
        WarehouseLocations,
        
        /// <remarks/>
        CommittedQuantity,
        
        /// <remarks/>
        ItemSpecifics,
        
        /// <remarks/>
        Categories,
        
        /// <remarks/>
        AccountingCode,
        
        /// <remarks/>
        SortOrder1,
        
        /// <remarks/>
        SortOrder2,
        
        /// <remarks/>
        RRP,
        
        /// <remarks/>
        DefaultPrice,
        
        /// <remarks/>
        PromotionPrice,
        
        /// <remarks/>
        PromotionStartDate,
        
        /// <remarks/>
        PromotionStartDateLocal,
        
        /// <remarks/>
        PromotionStartDateUTC,
        
        /// <remarks/>
        PromotionExpiryDate,
        
        /// <remarks/>
        PromotionExpiryDateLocal,
        
        /// <remarks/>
        PromotionExpiryDateUTC,
        
        /// <remarks/>
        DateArrival,
        
        /// <remarks/>
        DateArrivalUTC,
        
        /// <remarks/>
        CostPrice,
        
        /// <remarks/>
        UnitOfMeasure,
        
        /// <remarks/>
        BaseUnitOfMeasure,
        
        /// <remarks/>
        BaseUnitPerQuantity,
        
        /// <remarks/>
        QuantityPerScan,
        
        /// <remarks/>
        BuyUnitQuantity,
        
        /// <remarks/>
        SellUnitQuantity,
        
        /// <remarks/>
        PreorderQuantity,
        
        /// <remarks/>
        PickPriority,
        
        /// <remarks/>
        PickZone,
        
        /// <remarks/>
        TaxFreeItem,
        
        /// <remarks/>
        TaxInclusive,
        
        /// <remarks/>
        SearchKeywords,
        
        /// <remarks/>
        ShortDescription,
        
        /// <remarks/>
        Description,
        
        /// <remarks/>
        Features,
        
        /// <remarks/>
        Specifications,
        
        /// <remarks/>
        Warranty,
        
        /// <remarks/>
        eBayDescription,
        
        /// <remarks/>
        TermsAndConditions,
        
        /// <remarks/>
        ArtistOrAuthor,
        
        /// <remarks/>
        Format,
        
        /// <remarks/>
        ModelNumber,
        
        /// <remarks/>
        Subtitle,
        
        /// <remarks/>
        AvailabilityDescription,
        
        /// <remarks/>
        Images,
        
        /// <remarks/>
        ImageURL,
        
        /// <remarks/>
        BrochureURL,
        
        /// <remarks/>
        ProductURL,
        
        /// <remarks/>
        DateAdded,
        
        /// <remarks/>
        DateAddedLocal,
        
        /// <remarks/>
        DateAddedUTC,
        
        /// <remarks/>
        DateUpdated,
        
        /// <remarks/>
        DateUpdatedLocal,
        
        /// <remarks/>
        DateUpdatedUTC,
        
        /// <remarks/>
        UPC,
        
        /// <remarks/>
        UPC1,
        
        /// <remarks/>
        UPC2,
        
        /// <remarks/>
        UPC3,
        
        /// <remarks/>
        Type,
        
        /// <remarks/>
        SubType,
        
        /// <remarks/>
        NumbersOfLabelsToPrint,
        
        /// <remarks/>
        ReferenceNumber,
        
        /// <remarks/>
        InternalNotes,
        
        /// <remarks/>
        BarcodeHeight,
        
        /// <remarks/>
        SupplierItemCode,
        
        /// <remarks/>
        SplitForWarehousePicking,
        
        /// <remarks/>
        DisplayTemplate,
        
        /// <remarks/>
        EditableKitBundle,
        
        /// <remarks/>
        RequiresPackaging,
        
        /// <remarks/>
        IsAsset,
        
        /// <remarks/>
        WhenToRepeatOnStandingOrders,
        
        /// <remarks/>
        SerialTracking,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        ShippingCategory,
        
        /// <remarks/>
        MonthlySpendRequirement,
        
        /// <remarks/>
        RestrictedToUserGroup,
        
        /// <remarks/>
        IsInventoried,
        
        /// <remarks/>
        IsBought,
        
        /// <remarks/>
        IsSold,
        
        /// <remarks/>
        ExpenseAccount,
        
        /// <remarks/>
        PurchaseTaxCode,
        
        /// <remarks/>
        CostOfSalesAccount,
        
        /// <remarks/>
        IncomeAccount,
        
        /// <remarks/>
        AssetAccount,
        
        /// <remarks/>
        KitComponents,
        
        /// <remarks/>
        SEOPageTitle,
        
        /// <remarks/>
        SEOMetaKeywords,
        
        /// <remarks/>
        SEOPageHeading,
        
        /// <remarks/>
        SEOMetaDescription,
        
        /// <remarks/>
        SEOCanonicalURL,
        
        /// <remarks/>
        ItemURL,
        
        /// <remarks/>
        AutomaticURL,
        
        /// <remarks/>
        Job,
        
        /// <remarks/>
        RelatedContents,
        
        /// <remarks/>
        SalesChannels,
        
        /// <remarks/>
        Misc01,
        
        /// <remarks/>
        Misc02,
        
        /// <remarks/>
        Misc03,
        
        /// <remarks/>
        Misc04,
        
        /// <remarks/>
        Misc05,
        
        /// <remarks/>
        Misc06,
        
        /// <remarks/>
        Misc07,
        
        /// <remarks/>
        Misc08,
        
        /// <remarks/>
        Misc09,
        
        /// <remarks/>
        Misc10,
        
        /// <remarks/>
        Misc11,
        
        /// <remarks/>
        Misc12,
        
        /// <remarks/>
        Misc13,
        
        /// <remarks/>
        Misc14,
        
        /// <remarks/>
        Misc15,
        
        /// <remarks/>
        Misc16,
        
        /// <remarks/>
        Misc17,
        
        /// <remarks/>
        Misc18,
        
        /// <remarks/>
        Misc19,
        
        /// <remarks/>
        Misc20,
        
        /// <remarks/>
        Misc21,
        
        /// <remarks/>
        Misc22,
        
        /// <remarks/>
        Misc23,
        
        /// <remarks/>
        Misc24,
        
        /// <remarks/>
        Misc25,
        
        /// <remarks/>
        Misc26,
        
        /// <remarks/>
        Misc27,
        
        /// <remarks/>
        Misc28,
        
        /// <remarks/>
        Misc29,
        
        /// <remarks/>
        Misc30,
        
        /// <remarks/>
        Misc31,
        
        /// <remarks/>
        Misc32,
        
        /// <remarks/>
        Misc33,
        
        /// <remarks/>
        Misc34,
        
        /// <remarks/>
        Misc35,
        
        /// <remarks/>
        Misc36,
        
        /// <remarks/>
        Misc37,
        
        /// <remarks/>
        Misc38,
        
        /// <remarks/>
        Misc39,
        
        /// <remarks/>
        Misc40,
        
        /// <remarks/>
        Misc41,
        
        /// <remarks/>
        Misc42,
        
        /// <remarks/>
        Misc43,
        
        /// <remarks/>
        Misc44,
        
        /// <remarks/>
        Misc45,
        
        /// <remarks/>
        Misc46,
        
        /// <remarks/>
        Misc47,
        
        /// <remarks/>
        Misc48,
        
        /// <remarks/>
        Misc49,
        
        /// <remarks/>
        Misc50,
        
        /// <remarks/>
        Misc51,
        
        /// <remarks/>
        Misc52,
    }
}
